<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=big5">
<title>柏青哥的 SuSE Linux -- 系統紀錄檔</title>
<style type="text/css">
<!--
a {
	color: #000099;
	text-decoration: none;
}
-->
</style>
</head>

<body background="sumtextb.jpg" tppabs="http://www.suse.url.tw/sumtextb.jpg" link="#000099" vlink="#000099" alink="#000099" leftmargin="40">
<a href="index-1.htm" tppabs="http://www.suse.url.tw/sles10/index.htm" target="_blank"><img src="first.GIF" tppabs="http://www.suse.url.tw/first.GIF" width="40" height="40" border="0" align="middle"></a> 
　　作者：陳柏菁<font size="+1">　</font>E-mail：pachingko@ms96.url.com.tw 
<table width="100%" border="0">
  <tr> 
    <td nowrap> <div align="left"></div>
      <div align="center"><font size="+2"><strong><font color="#000000" size="7"><strong>第九章　系統紀錄檔</strong></font></strong></font></div>
      <div align="center"></div></td>
  </tr>
</table>
<font color="#000000"><font color="#660066"><br>
<font color="#000099" size="+1"><strong>索引：</strong></font><br>
</font></font>
<table width="100%" border="0">
  <tr> 
    <td colspan="3"><font color="#000099"><a href="#1"><strong>9.1 設定 syslogd</strong></a></font></td>
  </tr>
  <tr> 
    <td width="3%"><font color="#000099">&nbsp;</font></td>
    <td width="5%" align="center" valign="top" nowrap><font color="#000099">9.1.1</font></td>
    <td width="92%"><a href="#2">所需套件及套件內容</a></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.1.2</font></td>
    <td><a href="#3">設定 syslog.conf</a></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">9.1.3</font></td>
    <td><a href="#4">架設 log server</a></td>
  </tr>
  <tr> 
    <td colspan="3"><font color="#000099"><strong>9.2 <a href="#5">設定 syslog-ng</a></strong></font></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.1</font></td>
    <td><a href="#6">syslog-ng 簡介</a></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.2</font></td>
    <td><a href="#7">全域選項 ( Options )</a></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.3</font></td>
    <td><a href="#8">訊息來源 ( Sources )</a></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.4</font></td>
    <td><a href="#9">過濾器 ( Filters )</a></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.5</font></td>
    <td><a href="#10">訊息目的 (Destinations) </a></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.6</font></td>
    <td><a href="#11">日誌路徑 (Log paths)</a></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">9.2.7</font></td>
    <td><a href="#12">syslog-ng.cong 設定檔說明</a></td>
  </tr>
  <tr> 
    <td colspan="3"><font color="#000099"><strong>9.3 <a href="#13">紀錄檔輪替 (logrotate)</a></strong></font></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.3.1</font></td>
    <td><a href="#14">紀錄檔輪替的概念</a></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.3.2</font></td>
    <td><a href="#15">設定 logrotate.conf</a></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">9.3.3</font></td>
    <td><a href="#16">syslog 與 logrotate 的練習範例</a></td>
  </tr>
  <tr> 
    <td colspan="3"><font color="#000099"><strong>9.4 <a href="#17">登入的監控</a></strong> 
      --- <a href="#18">/var/log/lastlog</a>、<a href="#19">/var/run/utmp</a>、<a href="#20">/var/log/wtmp</a></font></td>
  </tr>
</table>
<br>
<hr>
<p><font color="#000000"><font color="#660066"> </font></font>　系統的紀錄檔，主要是記載系統的相關重要訊息，藉由分析紀錄檔的內容，管理者可以了解目前系統到底發生過什麼事，甚至可以依據紀錄檔的內容來解決一些錯誤問題的發生，所以一個好的系統管理者應該要有經常檢視紀錄檔的習慣。而系統紀錄檔到底放在哪呢 
  ? 又每個紀錄檔是如何定義的呢 ? 這就是今天要學習的重點了。<br>
  <br>
  　紀錄檔既然那麼重要，那對於紀錄(寫入)系統或網路服務資訊至紀錄檔的 daemon 就要有所了解。在 sles10 裡預設是使用 syslog-ng 這個 
  daemon 來進行紀錄的工作，不過也有很多的 distribution 是使用 syslogd，當然您要在 sles10 中使用 syslogd 也是可以的。</p>
<p> 　以下第一節會先針對 syslogd 做說明，再來第二節才是講解 syslog-ng，最後則是談到有關紀錄檔輪替的概念及登入的監控。</p>
<p><strong><font color="#0000FF" size="+2"><a name="1"></a><font size="6">9</font></font></strong><font color="#0000FF" size="6"><strong>.1 
  </strong></font><font size="6"><strong><font color="#0000FF">設定 syslogd</font></strong></font><strong><font color="#0000FF"><br>
  </font></strong><br>
  <font size="+1"><strong><a name="2"></a><font size="5">9.1.1 所需套件及套件內容</font></strong></font><br>
  <br>
  　如您要使用 syslogd 來作為紀錄訊息工具的話，那請先確定 syslogd 這個套件有安裝。再來稍微對 syslogd 的套件內容做個認識：</p>
<table width="100%" border="0">
  <tr> 
    <td height="61" bgcolor="#000000"> 
      <p><font color="#FFFFFF">suse:~ #<strong> <font color="#FFFF00">rpm -ql 
        syslogd <br>
        </font></strong><font color="#FFFFFF" face="細明體">/etc/syslog.conf</font><font color="#00FFFF" size="2" face="細明體">　</font></font><font color="#00FFFF" size="2" face="細明體">syslogd 
        的主要設定檔。當您修改過後需讓 syslogd 重新載入。</font><font color="#FFFFFF" face="細明體"><br>
        /sbin/syslogd　　</font><font color="#00FFFF" size="2" face="細明體"> 將系統或網路相關服務資訊寫入紀錄檔的主程式 
        (daemon)。</font><font color="#FFFFFF" face="細明體"><br>
        </font> </p>
      </td>
  </tr>
</table>
<p> 　syslogd 主要參考的一個檔案就是 /etc/syslog.conf<strong> </strong>﹔在這個檔案裡，可以設定 &quot;<font color="#0000FF">哪一種服務類別出現在哪一種訊息等級的時候，要採取怎樣的動作</font>&quot;，至於詳細的設定格式請參考下一小節的說明。</p>
<p> <strong><font size="+1"><a name="3"></a><font size="5">9.1</font></font></strong><font size="5"><strong>.2 
  設定 syslog.conf</strong></font><br>
  <br>
  　在 syslog.conf 中的每一筆設定佔用一行，至於設定格式如下：</p>
<table width="30%" border="0" bgcolor="#CCCCCC">
  <tr> 
    <td height="23" nowrap><strong>facility.level 　　　　action</strong></td>
  </tr>
</table>
<p> 　先針對這幾個欄位做個解說：</p>
<table width="100%" border="1">
  <tr bgcolor="#999999"> 
    <td align="center" valign="middle" nowrap><font color="#000099"><strong>欄 
      位</strong></font></td>
    <td><font color="#000099"><strong>說　明</strong></font></td>
  </tr>
  <tr> 
    <td width="8%" align="center" valign="middle" nowrap><font color="#000099"><strong>facility</strong></font></td>
    <td width="92%"><font color="#000099">代表所要紀錄該服務的訊息類別為何，也就是紀錄的訊息來源是屬於哪方面的訊息。常見的有：<br>
      <font face="細明體">　˙kern：有關核心所產生的訊息。<br>
      　<font color="#000099">˙</font>auth<font color="#000099">：</font>有關安全事件方面的訊息。<br>
      　<font color="#000099">˙</font>authpriv<font color="#000099">：</font>有關存取控制方面的訊息。<br>
      　<font color="#000099">˙</font>cron<font color="#000099">：</font>有關cron排程服務方面的訊息。<br>
      　<font color="#000099">˙</font>mail<font color="#000099">：</font>有關郵件服務方面的訊息。<br>
      　<font color="#000099">˙</font>lpr<font color="#000099">：</font>有關列印服務方面的訊息。<br>
      　<font color="#000099">˙</font>daemon<font color="#000099">：</font>有些服務系統未分配其專屬的facility時，即可歸類為daemon。<br>
      　<font color="#000099">˙</font>syslog<font color="#000099">：</font>由syslogd所產生的內部訊息。<br>
      　<font color="#000099">˙</font>news<font color="#000099">：</font>有關news服務方面的訊息。</font><br>
      </font> <font color="#000099"> 另外 facility 如為「*」，則表示所有的 facility。</font></td>
  </tr>
  <tr> 
    <td height="57" align="center" valign="middle" nowrap><font color="#000099"><strong>level</strong></font></td>
    <td><font color="#000099">代表的是訊息出現的優先等級 (priority)，從最緊急到最輕微的等級依序為：<br>
      emerg → alert → crit → err → warning → notice → info → debug<strong> <br>
      </strong>level 如為「*」，則表示所有的 level ﹔level 如果為「none」，則表示要將此 facility 排除在外。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099"><strong>action</strong></font></td>
    <td><font color="#000099">表示依照前面設定所產生的訊息，要採取怎樣的紀錄動作。<br>
      action 一般最常見的是一個包含完整路徑的檔案，此外也可以是另一台主機名稱 (@hostname)、使用者名稱 (多使用者時可以用「,」做區隔 
      ) 、終端機或 FIFO file (名稱前面要加上「|」)。<br>
      action 如為「*」，則表示 all user。</font></td>
  </tr>
</table>
<br>
　對於每一個 facility，您需要分配一個 level 給它，且在 facility 與 level 之間需用 &quot;.&quot; 隔開 ﹔如果有兩組 
facility (不同的 level) 是使用相同的 action，那麼這兩組 facility 之間需用 &quot;;&quot; 隔開 ﹔ 那萬一有兩個 
facility 是使用同一個 level，並採用相同的 action，則這兩個 facility 間需先用 &quot;,&quot; 隔開，然後再與 level 
間以 &quot;.&quot; 做區隔。參考以下的設定格式就知道剛剛在說些什麼：<br>
<br>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><font face="細明體">facility.level　　　　　　　　　　　　　action<br>
      facility1.level1;facility2.level2　　　 action<br>
      facility1,facility2.level　　　　　　　 action</font> </td>
  </tr>
</table>
<p>　接著就來看看 syslog.conf 的內容：</p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
      /etc/syslog.conf</strong></font><br>
      <font color="#FFFFFF" face="細明體">kern.warning;*.err;authpriv.none</font><font face="細明體">　　　 
      </font><font color="#FFFFFF" face="細明體">/dev/tty10</font><br>
      </font> <font color="#00FFFF">#</font> <font color="#00FFFF"><font size="2">有關核心的訊息，其訊息等級在 
      warning 以上 (含 warning)，以及所有的訊息其 level </font></font><br>
      <font color="#00FFFF">#</font> <font color="#00FFFF"><font color="#00FFFF"><font size="2">在 
      err 以上 (含 err) 時，</font></font><font size="2">會將這些訊息顯示在第十個終端機，但存取控制方面的訊息除外。</font></font><br>
      <font color="#00FFFF"><font color="#00FFFF">#</font> <font color="#00FFFF"><font color="#00FFFF"><font size="2"></font></font></font><font size="2">您可以按下 
      Ctrl-Alt-F10 去看看就知了。</font></font><br>
      <br>
      <font color="#FFFFFF" face="細明體">*.emerg　　　　　　　　　　　　　　　　*</font><br>
      <font color="#00FFFF">#</font> <font color="#00FFFF"><font size="2">所有訊息，只要其 
      level 是 emerg 的話，馬上通知線上的每一個人。</font></font><br>
      <br>
      <font color="#FFFFFF" face="細明體">mail.*　　　　　　　　　　　　　　　　-/var/log/mail</font><br>
      <font color="#00FFFF"># <font size="2">有關郵件服務方面的所有訊息，紀錄在 /var/log/mail 檔案內。至於在紀錄檔前面加上</font><br>
      # <font color="#00FFFF"><font size="2">個 &quot;<strong>-</strong>&quot; 
      符號，</font></font><font size="2">其主要作用是為了加快執行效率 (非同步寫入)。</font></font> <font color="#00FFFF"><br>
      </font> <font color="#00FFFF"> <br>
      <font color="#FFFFFF" face="細明體">mail.info　　　　　　　　　　　　　　 -/var/log/mail.info</font><font face="細明體"><br>
      </font><font color="#FFFFFF" face="細明體">mail.warning　　　　　　　　　　　　　-/var/log/mail.warn</font><font face="細明體"><br>
      </font><font color="#FFFFFF" face="細明體">mail.err　　　　　　　　　　　　　　　 /var/log/mail.err</font><br>
      </font> <font color="#00FFFF"># <font size="2">關於 mail 的訊息，其 level 在 info 
      以上 (含 info) 時紀錄於 /var/log/mail.info 內 ; </font><br>
      # <font color="#00FFFF"><font size="2">在 warning</font></font> <font size="2">以上 
      (含 warning) 時紀錄於 /var/log/mail.warn 內 ; <br>
      </font><font color="#00FFFF"><font color="#00FFFF"># <font color="#00FFFF"><font size="2"></font></font></font><font size="2">在 
      err 以上 (含 err ) 時紀錄於 /var/log/mail.err 內。</font></font><font size="2"> </font><br>
      </font> <font color="#00FFFF"> <br>
      <font color="#FFFFFF" face="細明體">news.crit　　　　　　　　　　　　　　 -/var/log/news/news.crit</font><br>
      <font color="#FFFFFF" face="細明體">news.err　　　　　　　　　　　　　　　-/var/log/news/news.err</font><br>
      <font color="#FFFFFF" face="細明體">news.notice　　　　　　　　　　　　　 -/var/log/news/news.notice</font><br>
      </font><font color="#00FFFF"># <font size="2">有關 news 服務的訊息，其 level 在 crit 
      以上 (含 crit) 時記載於 /var/log/news/news.crit ; </font><br>
      # <font size="2">在 err 以上 (含 err ) 時記載於 /var/log/news/news.err ; </font><br>
      # <font size="2">在 notice 以上 (含 notice ) 時記載於 /var/log/news/news.notice。</font></font> 
      <font color="#00FFFF"><br>
      </font> <font color="#00FFFF"><br>
      <font color="#FFFFFF" face="細明體">*.=warning;*.=err　　　　　　　　　　 -/var/log/warn</font><br>
      </font> <font color="#00FFFF"># <font size="2">所有的 facility 其 level 剛好是 
      warning 及 err 時，紀錄於 /var/log/warn 檔案內。</font></font> <font color="#00FFFF"><br>
      </font> <font color="#00FFFF"><br>
      <font color="#FFFFFF" face="細明體">*.crit　　　　　　　　　　　　　　　　 /var/log/warn</font><br>
      </font> <font color="#00FFFF"># <font size="2">所有的 facility 其 level 為 crit 
      以上 (含 crit) 時，紀錄於 /var/log/warn 檔案內。</font></font> <font color="#00FFFF"><br>
      </font> <font color="#00FFFF"><br>
      <font color="#FFFFFF" face="細明體">*.*;mail.none;news.none　　　　　　　 -/var/log/messages</font> 
      <br>
      </font> <font color="#00FFFF"># <font size="2">除了 mail 及 news 服務以外的所有訊息，紀錄在 
      /var/log/messages。</font><br>
      </font> <font color="#00FFFF"><br>
      <font color="#FFFFFF" face="細明體">kern.info;kern.!err　　　　　　　　　　/var/log/kernel</font><br>
      </font> <font color="#00FFFF"># <font size="2">err 前面加上個 &quot;!&quot; (not)，表示不包括 
      err 以上(含 err)的訊息等級。</font><br>
      # <font color="#00FFFF"><font size="2">所以這一行的設定是說</font></font><font size="2">有關 
      kernel 的訊息其 level 在 info 以上(含 info )但不包括</font><br>
      # <font color="#00FFFF"><font size="2"> err 以上(含 err) 時 </font></font><font size="2">(即info~warning)，紀錄在 
      /var/log/kernel 檔案內。</font><br>
      </font> <font color="#00FFFF"><br>
      <font color="#FFFFFF" face="細明體">mail.*;mail.!=info　　　　　　　　　　 　　　 /var/log/maillog</font><br>
      </font> <font color="#00FFFF"># <font size="2">有關 mail 服務的訊息，除了 level 為 
      info 外，都紀錄在 /var/log/maillog 檔案內。</font><br>
      </font> <font color="#00FFFF" face="細明體"><br>
      </font><font color="#00FFFF"><font color="#FFFFFF" face="細明體">local7.*　　　　　　　　　　　　　　　 
      /var/log/boot.log</font><br>
      </font> <font color="#00FFFF"># <font size="2">將開機過程的訊息紀錄在 /var/log/boot.log 
      檔案內。</font></font> <font color="#00FFFF"><br>
      </font> <font color="#00FFFF"><br>
      <font color="#FFFFFF" face="細明體">cron.*　　　　　　　　　　　　　　　　 /var/log/cron</font><br>
      </font> <font color="#00FFFF"># <font size="2">排程方面的訊息也是很重要的，把它設定上去吧 !</font></font><font color="#FFFFFF">&nbsp;</font> 
    </td>
  </tr>
</table>
<br>
　由於 SLES10 預設是啟用 syslog-ng，因此在執行 syslog script 之前，先做兩個動作：<br>
<br>
<strong>　 1. 停止預設的 syslog-ng 服務</strong><br>
<br>
<table width="100%" border="0" bgcolor="#000000">
  <tr>
    <td height="26"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> <strong>rcsyslog 
      stop </strong></font></font></td>
  </tr>
</table>
　<br>
<strong>　 2. 修改 /etc/sysconfig/syslog</strong><br>
<br>
<table width="100%" border="0" bgcolor="#000000">
  <tr>
    <td height="57"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
      /etc/sysconfig/syslog<br>
      </strong><font color="#FFFFFF">SYSLOG_DAEMON=&quot;syslogd&quot;</font> 
      <strong><br>
      </strong> <font color="#00FFFF"># <font size="2">這是指定提供 syslog 服務的 daemon 
      為 syslogd，而非原本的 syslog-ng 。</font></font></font></font></td>
  </tr>
</table>
<br>
　完成以上兩個步驟後，就可使用以下兩種方式啟用 syslogd：<br>
<br>
<table width="100%" border="0" bgcolor="#000000">
  <tr> 
    <td height="26"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> <strong>rcsyslog 
      start<br>
      </strong></font><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> <strong>/etc/init.d/syslog 
      start</strong></font></font><font color="#FFFF00"><strong> </strong></font></font></td>
  </tr>
</table>
<br>
　要是將來修改了 syslog.conf 後，請記得採用以下任何一種方式來讓 syslogd 重新載入 syslog.conf：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td height="72" bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> 
      <strong>/etc/init.d/syslog restart</strong><br>
      </font><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> <strong>/etc/init.d/syslog 
      reload</strong></font></font><font color="#FFFF00"> <br>
      <font color="#FFFFFF">suse:~ #<strong> </strong></font><strong>rcsyslog 
      restart</strong><br>
      <font color="#FFFFFF">suse:~ #</font> <strong>rcsyslog reload</strong></font></font></td>
  </tr>
</table>
<p> <font size="+1"><strong><a name="4"></a><font size="5">9.1.3 架設 log (syslogd) 
  server</font></strong></font><br>
  <br>
  　由於紀錄檔非常的重要，所以有些企業會專門設定一台 log(syslogd) server 來集中管理所有主機的相關紀錄，尤其當手邊的 Unix-Like 
  主機為數眾多的時候，更會想要將這些紀錄集中管理及分析。至於詳細的做法不難，請看以下的步驟：</p>
<ol>
  <li>在 server 部分，請先將 syslog.conf 檔案搞定，可參考剛剛的設定內容。<br>
    <br>
  </li>
  <li>修改 /etc/sysconfig/syslog，找到 &quot;SYSLOGD_PARAMS&quot; 參數，並於其後補上 -r 參數：<br>
    <br>
    <table width="36%" border="0" bgcolor="#CCCCCC">
      <tr> 
        <td nowrap>suse:~ # <strong>vi /etc/sysconfig/syslog</strong><br>
          SYSLOGD_PARAMS=&quot;<strong>-r</strong>&quot; </td>
      </tr>
    </table>
    <br>
  </li>
  <li>重新啟動 syslogd：<br>
    <br>
    <table width="36%" border="0" bgcolor="#CCCCCC">
      <tr> 
        <td>suse:~ #<strong> rcsyslog restart</strong></td>
      </tr>
    </table>
    <br>
  </li>
  <li>做個確認：<br>
    <br>
    <table width="36%" border="0" bgcolor="#CCCCCC">
      <tr> 
        <td nowrap>suse:~ # <strong>netstat -anp | grep :514<br>
          </strong> <font face="細明體">udp　0　0　　:::514　　:::* </font></td>
      </tr>
    </table>
    <br>
    看到那個 514 port 就對了，至於 netstat 指令在網路部分再詳談。<br>
    <br>
  </li>
  <li>server 端搞定後，換 client 端的設定，您只要將 client 端的 syslog.conf 裡，所有的 action 都指向這台 
    log server 就行了，比如：<br>
    <br>
    <table width="36%" border="0" bgcolor="#CCCCCC">
      <tr> 
        <td nowrap><font face="細明體">cron.* 　　　@server.test.com.tw</font></td>
      </tr>
    </table>
    <br>
    修改完畢後，也請記得重新啟動 syslogd 噢。</li>
</ol>
<p> <br>
  <font color="#0000FF"><strong><font size="+1"><font size="+2"><a name="5"></a><font size="6">9.2 
  設定</font></font></font></strong></font> <font size="6"><strong><font color="#0000FF"> 
  syslog-ng</font></strong></font><br>
  <br>
  <font size="+1"><strong><a name="6"></a><font size="5">9.2.1 syslog-ng 簡介</font></strong></font></p>
<p>　目前絕大部分的人，還是習慣使用傳統的 syslogd，不過 syslogd 在使用上可能或多或少會給您帶來一些些的不方便，比方說，一個紀錄檔內可能會包含著大量的各種訊息紀錄，因此要查詢某些特定訊息時，往往就要找上個老半天，且過多訊息的存在，容易造成一些不是很重要的訊息會掩蓋掉重要的訊息，所以說傳統的 
  syslogd 很難讓系統管理者去選擇他所感興趣的訊息紀錄。此時想到的一個比較好的替代方案，就是以 syslog-ng ( syslog new generation 
  ) 來取代 syslogd。</p>
<p>　syslog-ng 的一個設計原則之一，就是建立更好的訊息過濾細膩度 ﹔syslog-ng 除了具有傳統的 syslogd 之基本功能外，還能針對訊息內容來自訂過濾條件，並且可以把所過濾出來的訊息送到指定的目的。而設計原則之二，則是更容易進行訊息的轉送，它支援主機鏈 
  (chain_hostnames)，即使紀錄訊息經過了許多主機的轉送，也可以找出轉送訊息的原始主機和所有處理過這個訊息的主機名稱。</p>
<p>　另外在學習 syslog-ng 時，最好能先建立對訊息路徑 (Message paths) 的觀念，因此這裡就先概略說一下。Message paths 
  是由一個或者多個日誌消息來源、一個或者多個過濾規則以及一個或者多個日誌消息目的所組成的，當某個訊息來源之訊息進入了 syslog-ng 後，如果這些訊息符合過濾規則，syslog-ng 
  就把這些訊息送到相對應之目的。<br>
  <br>
  　接著來看看 syslog-ng 的套件內容：</p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ 
      #<font color="#FFFF00"><strong> rpm -ql syslog-ng</strong></font><br>
      </font><font color="#FFFFFF">&nbsp; </font> 
      <table width="100%" border="0">
        <tr> 
          <td width="27%" nowrap><font color="#FFFFFF">/etc/logrotate.d/syslog-ng</font></td>
          <td width="73%"><font color="#00FFFF" size="2">設定紀錄檔輪替的檔案。</font></td>
        </tr>
        <tr> 
          <td nowrap><font color="#FFFFFF">/etc/syslog-ng/syslog-ng.conf</font></td>
          <td nowrap><font color="#00FFFF" size="2">syslog-ng 主要參考的檔案。</font></td>
        </tr>
        <tr> 
          <td nowrap><font color="#FFFFFF">/sbin/syslog-ng</font></td>
          <td><font color="#00FFFF" size="2" face="細明體">將系統或網路相關服務資訊寫入紀錄檔的daemon。</font></td>
        </tr>
      </table></td>
  </tr>
</table>
<p> 　syslog-ng.conf 設定檔內容是由五個部分所組成，即 options {}、source {}、filter {}、destination 
  {}、log {} 這五大區段。options {} 裡所設定的是全域 (global) 選項，其中有部分選項可以套用在其它設定區段中，但若兩個地方的設定起衝突時，則是會以其它設定區段裡頭的設定為主。以下各小節就分別針對這幾個區段來做說明。</p>
<p> <font size="+1"><strong><a name="7"></a><font size="5">9.2.2 全域選項 ( Options 
  )</font></strong></font></p>
<p> 　透過 options 敘述中所指定的全域選項，可改變 syslog-ng 的預設行為。至於其基本設定語法如下：</p>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td height="27"><strong><font face="細明體">options { option1(params); option2(params); 
      ... };</font></strong></td>
  </tr>
</table>
<p>　options1、options2 即所謂的全域選項，至於 ( ) 內則是該選項可接受之參數值。另外每個全域選項之後需以分號做結束。<br>
  <br>
  <strong><font color="#000099">syslog-ng 所支援的全域選項一覽表</font></strong><font color="#000099">：</font> 
</p>
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="15%" align="center" valign="middle" nowrap> <div align="center"><font color="#000099"><strong>選項名稱 
        </strong></font></div></td>
    <td width="12%" align="center" nowrap> <div align="center"><font color="#000099"><strong>可接受之值</strong></font></div></td>
    <td width="73%"> <div align="center"><font color="#000099"><strong>簡　單　描　述</strong></font></div></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">chain_hostnames( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no</font></div></td>
    <td><font color="#000099">是否要將訊息傳送過程所經過的所有主機都給它紀錄下來。預設為 yes。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">long_hostnames( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no </font></div></td>
    <td><font color="#000099">為 chain_hostnames 的別名，所以用哪個做設定都行。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">keep_hostname( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no </font></div></td>
    <td><font color="#000099">是否要改寫主機名稱。當設定成 yes 時，表示會保留原始紀錄檔內的主機名稱。預設 為 no。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">use_dns( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no</font></div></td>
    <td><font color="#000099">是否要透過 DNS 來反解出來源 IP 所對應的主機名稱。請留意 use_dns 只會針對訊息最前頭的那台主機，以指出此訊息是哪台主機所送出的。預設為 
      yes。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">use_fqdn( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no </font></div></td>
    <td><font color="#000099">是否要紀錄完整的主機名稱。預設為 no。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">use_time_recvd( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no</font></div></td>
    <td><font color="#000099">是否要將訊息中的時間戳記在傳送過程中保留住。當設定成 yes 時，syslog-ng 會把訊息中的時間戳記改成本地端收到訊息的時間。預設為 
      no。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">sync( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">number 
        </font></div></td>
    <td><font color="#000099">設定在訊息紀錄寫入檔案之前，有多少訊息數要先被放在緩衝區內作快取。預設為 0。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">log_fifo_size( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">number 
        </font></div></td>
    <td><font color="#000099">當 syslog-ng 過於忙碌時，會先將訊息暫存在佇列中來等待處理，而此選項就是用來設定可以存放在佇列中的訊息數目&nbsp;﹔當佇列滿時，新進的訊息將會被丟棄掉。預設為 
      100。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">stats( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">number</font></div></td>
    <td><font color="#000099">設定每隔多久時間統計一次被丟棄的訊息數。預設為 10 分鐘 (600 秒)。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">create_dirs( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">yes 或 
        no</font></div></td>
    <td><font color="#000099">如果紀錄檔所處的目錄不存在，是否要建立。預設為 yes。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">dir_owner( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">username</font></div></td>
    <td><font color="#000099">指定所建立目錄的擁有者。預設為 root。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">dir_group( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">groupname 
        </font></div></td>
    <td><font color="#000099">指定所建立目錄的擁有群組。預設為root。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">dir_perm( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">perm 
        value </font></div></td>
    <td><font color="#000099">指定所建立目錄的權限。預設為 0700。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">owner( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">username</font></div></td>
    <td><font color="#000099">syslog-ng 所建立檔案的擁有者。預設為 root。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">group( 
        )</font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">groupname</font></div></td>
    <td><font color="#000099">syslog-ng 所建立檔案的擁有群組。預設為 root。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">perm( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">perm 
        value</font></div></td>
    <td><font color="#000099">syslog-ng 所建立檔案的權限。預設為 0600。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap> <div align="center"><font color="#000099">time_reopen( 
        ) </font></div></td>
    <td align="center" nowrap> <div align="center"><font color="#000099">number 
        </font></div></td>
    <td><font color="#000099">當連線斷掉後，需間隔多少秒才能再重新連線。預設為 60 秒。</font></td>
  </tr>
</table>
<strong><br>
範例</strong>： 
<table width="100%" border="0" bgcolor="#000000">
  <tr>
    <td><font color="#FFFFFF" face="細明體">options { long_hostnames(no); use_time_recvd(yes); 
      <br>
      　　　　　stats(43200); log_fifo_size(200); <br>
      }; </font></td>
  </tr>
</table>
<p><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> <font size="+1"><strong>探討 
  long_hostnames( )、keep_hostname( ) </strong></font><br>
  <br>
  　當進行訊息紀錄轉送時，log server 上的 syslog-ng 在預設情況下，會去改寫所收到訊息內的主機名稱 [ keep_hostname(no) 
  ]，接著 syslog-ng 會檢查 long_hostnames ( chain_hostnames ) 是否設定為 yes，如果是的話，則 syslog-ng 
  會把傳送訊息給它的這台來源主機名稱附加在訊息中的主機名稱之後 (比如 server1/server2)，否則會把訊息內原本的主機名稱替換掉。</p>
<p><strong>【範例說明</strong>】</p>
<p>　假使現在有三台主機透過 DNS 解析的結果如下： 192.168.1.1 ( server1 )、192.168.1.2 ( server2 )、192.168.1.3 
  ( server3 )，其中 server1 原本的主機名稱是 linux (根據 /etc/HOSTNAME)，而在 linux 主機上所產生的訊息會傳送到 
  server2，接著 server2 再把訊息傳給 server3，參考一下架構圖：</p>
<p align="center"><img src="log.png" tppabs="http://www.suse.url.tw/picture/log.png" width="499" height="136"> </p>
<p>　如果現在 Client 端對 server1 進行 ssh 遠端連線，則每一部 server 紀錄檔內之訊息，所顯示的主機名稱如下表所示：</p>
<p align="center"><img src="syslog-ng.png" tppabs="http://www.suse.url.tw/picture/syslog-ng.png" width="645" height="232"></p>
<strong><em><font color="#000099">　</font></em></strong><font color="#000000">在上表中所看到的 
src，是 syslog-ng.conf 中設定 source 時所使用的識別字 ( identifier )。 </font> 
<p><strong><font size="+1"><a name="8"></a><font size="5">9.2.3 訊息來源 ( Sources 
  )</font></font></strong></p>
<p>　訊息來源 (source) 是由一些訊息來源驅動器 (source drivers) 所組成。為了宣告一個訊息來源，必須在設定檔中使用 source 
  敘述，其設定語法如下：</p>
<table width="100%" border="0">
  <tr>
    <td height="27" bgcolor="#CCCCCC"><strong><font face="細明體">source &lt;identifier&gt; 
      { source-driver(params);source-driver(params);… } ;</font></strong></td>
  </tr>
</table>
<p>　首先 identifier 必須是所給的訊息來源中唯一的識別字，而這個識別字不能和任何的保留字有所衝突。再來其後就是指定您要使用的 source-driver，這將決定未來所要收集的訊息紀錄為何。<br>
  <br>
  　接著先補充一下系統和 syslogd 進行通訊的方式，了解了它們之間的互動後，會有助於您對 syslog-ng 更進一步的認識。<br>
  <br>
  <font color="#000099"><strong>syslogd 跟系統之間的通訊方式： </strong></font> </p>
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="10%" nowrap> <div align="center"><font color="#000099"><strong>使用平台</strong></font></div></td>
    <td width="90%" nowrap> <div align="center"><font color="#000099"><strong>通　　訊　　方　　式</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">Linux </font></div></td>
    <td><font color="#000099">使用 /dev/log 這個具 SOCK_STREAM 風格的 UNIX socket。</font> 
      <font color="#000099">所謂的 socket file，一般是指在 unix 系統上，用來跟網路相關服務做互動的一個特殊檔案，它可以作為網路資料溝通的一個承接口。而實際上，socket 
      是具有連線導向與無連線導向的分別。 </font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">BSD </font></div></td>
    <td><font color="#000099">使用 /var/run/log 這個具 SOCK_DGRAM 風格的 UNIX socket。</font></td>
  </tr>
</table>
<p> 　在 syslog-ng 中，每個可能的通訊機制會有相對應的 source driver。比如要打開一個具有 SOCK_DGRAM 風格的 UNIX 
  socket 進行通訊時，就必須使用 unix-dgram 這個 source driver，同樣的道理，在 Linux 中要打開具 SOCK_STREAM 
  風格的 UNIX socket 進行通訊，就會使用到 unix-stream 這個 source driver 。</p>
<p>　每個 driver 可以攜帶一些參數，而有些參數是必要的，有些參數則是選擇性的。必要的參數是有其位置性的，此乃意味著他們需按規定的順序來被指派。unix-stream 
  及 unix-dgram driver 都必須指派一個必要參數，此必要參數就是指 socket file ，至於其他選擇性的參數就放在 socket file 
  之後。選擇性參數可按任何順序來指派。</p>
<strong><font color="#000099">syslog-ng 中，可利用的 source drivers：</font></strong> 
<br>
<br>
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="15%" nowrap> <div align="center"><font color="#000099"><strong>來源驅動器</strong></font></div></td>
    <td width="85%" nowrap> <div align="left"><font color="#000099"><strong>簡　　單　　描　　述</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">internal( )</font></div></td>
    <td><font color="#000099">syslog-ng 內部產生的訊息。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">unix-stream( )</font></div></td>
    <td nowrap><font color="#000099">讀取所指定的 socket file 訊息 (SOCK_STREAM)。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">unix-dgram( ) </font></div></td>
    <td><font color="#000099">讀取所指定的 socket file 訊息 (SOCK_DGRAM)。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">file( ) </font></div></td>
    <td nowrap><font color="#000099">讀取特殊檔案 (非一般文字檔，如 /proc/kmsg) 的訊息資料。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">pipe( ),fifo( ) </font></div></td>
    <td><font color="#000099">讀取所指定的 pipe file 訊息。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">tcp( ) </font></div></td>
    <td><font color="#000099">在指定的本機 TCP port 及介面位址監聽訊息。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">udp( ) </font></div></td>
    <td><font color="#000099">在指定的本機 UDP port 及介面位址監聽訊息。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">sun-stream( ) </font></div></td>
    <td><font color="#000099">在 solaris系統上，打開指定的 STREAMS 裝置，並讀取其內之訊息。</font></td>
  </tr>
</table>
<strong><font size="+1"><br>
</font></strong>　接著以下會針對部分 source driver 做個探討。<br>
<font size="+1"><strong><br>
<img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> unix-stream( ) 及 unix-dgram( 
)<br>
</strong></font><br>
　這兩個 source driver 剛剛已介紹過，不過要留意核心如果是在 2.4.0 版以後，則應該對 /dev/log 這個 socket 使用 unix-dgram，如指定成 
unix-stream，反而會無法取得核心的訊息。最後來補充一下它們可使用的選項。<br>
<br>
<font color="#000099"><strong>unix-stream 及 unix-dgram 可利用之選項：<br>
<br>
</strong></font> 
<table width="95%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="14%" nowrap> <div align="center"><font color="#000099"><strong>選項名稱</strong></font></div></td>
    <td width="14%" nowrap> <div align="center"><font color="#000099"><strong>可設定之值</strong></font></div></td>
    <td width="72%"> <div align="center"><font color="#000099"><strong>簡　　單　　描　　述</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">owner( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">username</font></div></td>
    <td><font color="#000099">設定 socket file 的擁有者。預設為 root。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">group( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">groupname</font></div></td>
    <td><font color="#000099">設定 socket file 的擁有群組。預設為 root。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">perm( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">perm value</font></div></td>
    <td><font color="#000099">設定 socket file 的權限。預設為 0666。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">max-connections( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">number</font></div></td>
    <td><font color="#000099">限定同時間能允許的串流連線數。另外此選項只能用於 unix-stream( ) 之中。預設為 10。</font></td>
  </tr>
</table>
<p> <font size="+1"><strong> <img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
  tcp( ) 及 udp( )</strong></font><br>
  <br>
  　先來看看 tcp( ) 及 udp( ) 這兩個 source driver 的宣告方式：</p>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><font face="細明體"><strong>tcp([options]) ;<br>
      udp([options]) ;</strong></font></td>
  </tr>
</table>
<br>
　options 就是指那些可以提供給 tcp( ) 或 udp( ) 來使用的選項。<br>
<br>
<font color="#0000CC"><strong><font color="#000099">tcp( ) 及 udp( ) 可使用之選項</font></strong></font><font color="#000099">： 
<br>
<br>
</font> 
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="15%" nowrap><div align="center"><font color="#000099"><strong>選項名稱</strong></font></div></td>
    <td width="11%" nowrap><div align="center"><font color="#000099"><strong>可設定之值</strong></font></div></td>
    <td width="74%"><div align="center"><font color="#000099"><strong>簡　　單　　描　　述</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">ip( ) 或 localip( ) </font></div></td>
    <td nowrap><div align="center"><font color="#000099">IP 位址</font></div></td>
    <td><font color="#000099">擔任 log server 的主機所要監聽的介面位址。預設為 0.0.0.0。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">port( ) 或 localport( 
        ) </font></div></td>
    <td nowrap><div align="center"><font color="#000099">Port number</font></div></td>
    <td><font color="#000099">擔任 log server 的主機所要監聽的 port number。預設為 514 port。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">max-connections( )</font></div></td>
    <td nowrap><div align="center"><font color="#000099">number</font></div></td>
    <td><font color="#000099">這是同時間最大連線數的限定 ﹔另外此選項只能用於 tcp( ) 的來源中。預設為 10。</font></td>
  </tr>
</table>
<br>
<strong>範例</strong>： 
<table width="100%" border="0">
  <tr> 
    <td height="27" nowrap bgcolor="#CCCCCC"><font face="細明體">source src { unix-stream(&quot;/dev/log&quot; 
      max-connections(100)); <br>
      　　　　　　 internal(); <br>
      　　　　　　 udp(ip(0.0.0.0) port(514)); <br>
      };</font></td>
  </tr>
</table>
<p> <font size="+1"><strong><a name="9"></a><font size="5">9.2.4 過濾器 ( Filters 
  )</font></strong></font></p>
<p>　透過 filter 的設定，可以讓我們對訊息來源做進一步的過濾，並將其分門別類的做控管，以期能更準確地處理系統訊息。過濾器也都有唯一的識別符號，語法如下：</p>
<table width="100%" border="0">
  <tr>
    <td bgcolor="#CCCCCC"><strong><font face="細明體">filter &lt;identifier&gt; { 
      expression ; } ;</font></strong></td>
  </tr>
</table>
<p> 　expression 中，可以使用 syslog-ng 的內部函式來編寫布林表示式，意即可把這些內部函式來搭配 and、or 及 not 等邏輯運算子，而組合成多個過濾條件，以決定是否要讓日誌訊息通過。</p>
<strong><font color="#000099">使用在 filter 敘述中的過濾函式</font></strong><font color="#000099">： 
<br>
<br>
</font> 
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="15%" nowrap> 
      <div align="center"><font color="#000099"><strong>過 
        濾 函 式</strong></font></div></td>
    <td width="18%" nowrap> 
      <div align="center"><font color="#000099"><strong>使 
        用 方 法</strong></font></div></td>
    <td width="67%"> 
      <div align="left"><font color="#000099"><strong>簡　單　描　述</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">facility( ) </font></div></td>
    <td nowrap> <div align="center"><font color="#000099">facility(facility[,facility]) 
        </font></div></td>
    <td><font color="#000099">比對訊息來源的服務類型 (facility)。常見的 facility 有 auth、authpriv、cron、daemon、kern、lpr、mail、news、syslog、user、local{0-7}、* 
      等。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">level( ) 或 priority( 
        )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">level(pri[,pri1..pri2])</font></div></td>
    <td><font color="#000099">依照訊息的優先等級來做比對。level 有 none、debug、info、notice、warn、err、crit、alert、emerg、* 
      等。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">program( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">program(regexp)</font></div></td>
    <td><font color="#000099">使用正規表示法來與紀錄訊息中的程式名稱欄位做比對。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">host( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">host(regexp) </font></div></td>
    <td><font color="#000099">使用正規表示法來與紀錄訊息中的主機名稱欄位做比對。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">match( ) </font></div></td>
    <td nowrap> <div align="center"><font color="#000099">match(regexp) </font></div></td>
    <td><font color="#000099">使用正規表示法來與紀錄訊息做比對。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">filter( ) </font></div></td>
    <td nowrap> <div align="center"><font color="#000099">filter(filtername) </font></div></td>
    <td><font color="#000099">呼叫另外一個已存在的 filter 來使用。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">netmask( )</font></div></td>
    <td nowrap> <div align="center"><font color="#000099">netmask(ip/mask)</font></div></td>
    <td><font color="#000099">檢查來源端的 IP 是否在指定的子網路中。</font></td>
  </tr>
</table>
<br>
<strong>範例</strong>： 
<table width="100%" border="0">
  <tr> 
    <td height="24" bgcolor="#CCCCCC"><font face="細明體">filter f_message { level(info 
      .. err) and not facility(cron,mail,news) or match(&quot;deny&quot;) ; } 
      ;</font></td>
  </tr>
</table>
<br>
　這裡定義了一個 filter 叫 f_messages，其所代表的過濾條件為：除了 cron、mail、news 以外的其他 facility，其 level 
是在 info ~ err 層級者，或者訊息中包含 &quot;deny&quot; 這個字串的話，都是符合過濾條件的訊息。<br>
<p><strong><font size="+1"><a name="10"></a><font size="5">9.2.5 訊息目的 (Destinations) 
  </font></font></strong></p>
<p> 　訊息目的是指當訊息來源 (sources) 被過濾器 (filters) 做規則比對後，把那些符合比對規則的訊息，要送往到哪裡的意思。 destination 
  可以是一般檔案、命名通道 ( pipe )、tty 或另一台主機。<br>
  <br>
  　與 sources 相同，destination 也是包含一個或多個目的驅動器 (destination drivers)，如此方可曉得要把指定的訊息送往何處。在設定檔內，需使用如下的 
  destination 敘述：</p>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td height="25"><strong><font face="細明體">destination &lt;identifier&gt; { 
      destination-driver(params) ; destination-driver(params) ; ... } ; </font></strong></td>
  </tr>
</table>
<p><strong><font color="#000099">syslog-ng 中，可利用的 destination drivers</font></strong><font color="#000099">： 
  </font> </p>
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="12%" nowrap> <div align="center"><font color="#000099"><strong>目的驅動器</strong></font></div></td>
    <td width="88%"> <div align="left"><font color="#000099"><strong>簡　　單　　描　　述</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">file( )</font></div></td>
    <td><font color="#000099">寫入訊息至所指定的檔案。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">pipe( ) , fifo( )</font></div></td>
    <td><font color="#000099">寫入訊息至所指定的 pipe file。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">unix-stream( )</font></div></td>
    <td><font color="#000099">送出訊息至所指定的 socket file (SOCK_STREAM)。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">unix-dgram( )</font></div></td>
    <td><font color="#000099">送出訊息至所指定的 socket file (SOCK_DGRAM)。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">udp( ) </font></div></td>
    <td><font color="#000099">送出訊息至所指定主機的 UDP port。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">tcp( ) </font></div></td>
    <td><font color="#000099">送出訊息至所指定主機的 TCP port。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">usertty( ) </font></div></td>
    <td><font color="#000099">如果使用者登入時，送出訊息給該指定的使用者 (即時線上通知)。</font></td>
  </tr>
  <tr> 
    <td nowrap> <div align="center"><font color="#000099">program( ) </font></div></td>
    <td><font color="#000099">送出訊息至所指定程式的標準輸入。</font></td>
  </tr>
</table>
<br>
　另外在 destination 敘述中，file( ) 內所指定的檔案名稱，可利用巨集 (參考下表) 來對此檔名做擴展。<br>
<br>
<font color="#000099"><strong>可使用之巨集一覽表： <br>
<br>
</strong></font> 
<table width="58%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td width="12%" nowrap> <div align="center"><font color="#000099"><strong>巨集名稱</strong></font></div></td>
    <td width="88%" nowrap> <div align="left"><font color="#000099"><strong>用　法　描　述</strong></font></div></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">PROGRAM</font></div></td>
    <td nowrap><font color="#000099">指定送出訊息的程式名稱為何。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">FACILITY</font></div></td>
    <td nowrap><font color="#000099">訊息類型的名稱。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">PRIORITY(LEVEL)</font></div></td>
    <td nowrap><font color="#000099">訊息的優先等級。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">YEAR</font></div></td>
    <td nowrap><font color="#000099">訊息被送出時的年份。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">MONTH </font></div></td>
    <td nowrap><font color="#000099">訊息被送出時的月份。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">WEEKDAY </font></div></td>
    <td nowrap><font color="#000099">訊息被送出時是星期幾。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">DAY </font></div></td>
    <td nowrap><font color="#000099">訊息是在幾號被送出的。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">HOUR</font></div></td>
    <td nowrap><font color="#000099">訊息是在幾點被送出的。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">MIN </font></div></td>
    <td nowrap><font color="#000099">訊息是在幾分被送出的。</font></td>
  </tr>
  <tr> 
    <td nowrap><div align="center"><font color="#000099">HOST </font></div></td>
    <td nowrap><font color="#000099">訊息來源的主機名稱。</font></td>
  </tr>
</table>
<blockquote> 
  <p><strong><font color="#000099">Note：</font></strong><font color="#000099" size="2">時間巨集所顯示的時間，有可能是使用紀錄檔中原始訊息的時間，或 
    log server 接收到這個訊息的時間，因為它會受到 use_time_recvd( ) 這個選項的控制。另外當訊息經過好幾台主機時，則 HOST 
    巨集所產生的主機名稱，將會受到 chain_hostnames( ) 這個選項的影響，如果是 chain_hostnames(yes)，則會使用第一台主機名稱。</font> 
  </p>
</blockquote>
<strong>範例</strong>： 
<table width="100%" border="0">
  <tr> 
    <td height="41" bgcolor="#CCCCCC"><font face="細明體">destination d_day { file(&quot;/var/log/messages.$DAY&quot;); 
      };<br>
      destination dhost { udp(&quot;192.168.1.155&quot; port(514)); };</font></td>
  </tr>
</table>
<p> <strong><font size="+1"><a name="11"></a><font size="5">9.2.6 日誌路徑 (Log paths)</font></font></strong></p>
<p>　從前面的介紹已經可以了解要如何定義 sources、filters 及 destinations，所以接著就可以利用 log 敘述來把他們給做個組合。log 
  敘述的語法如下：</p>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><strong><font face="細明體">log { source(s1) ; source(s2) ; ... <br>
      　　　filter(f1) ; filter(f2) ; ... <br>
      　　　destination(d1) ; destination(d2) ; ... <br>
      　　　flags(flag1[,flag2…] ) ; } ; </font></strong></td>
  </tr>
</table>
<p>　上面的 log 敘述應該蠻容易理解的，每個 source、filter 及 destination 後的 s1、f1、d1、…，就是把剛剛所宣告的 
  identifier 套用進去而已，這樣就可以先根據所指定的 source 去讀取訊息，再依 filter 進行訊息過濾，最後才把這些過濾後的訊息送往 
  destination 所指定的目的。</p>
<p>　設定檔內一定會存在著好幾筆的 log 敘述，而在預設的情況下，這些 log 敘述將會依照他們在設定檔中出現的位置來依序執行，因此，同一筆訊息紀錄有可能會被送往相同或不同的目的好幾次，如以目的為紀錄檔來說，則同一紀錄檔內也許會存在著重複的記錄，或者不同紀錄檔中有可能會存在相同的訊息紀錄 
  ﹔而這個預設的行為，將可以藉由 flags( ) 的設定而改變。比如您在某個 log 敘述中使用了 flags(final) 這個旗標時，表示在將此次訊息輸出至指定的目的後，爾後就不再處理這個訊息了。</p>
<strong>範例</strong>：
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#CCCCCC"><font face="細明體">source src {<br>
      　　　internal( ); <br>
      　　　unix-dgram(&quot;/dev/log&quot;);<br>
      };<br>
      <br>
      filter f_mailinfo { level(info) and facility(mail); };<br>
      filter f_mail { facility(mail); };<br>
      filter f_messages { not facility(news); };<br>
      <br>
      destination mailinfo { file(&quot;/var/log/mail.info&quot;); };<br>
      log { source(src); filter(f_mailinfo); destination(mailinfo); };<br>
      <br>
      destination mail { file(&quot;/var/log/mail&quot;); };<br>
      log { source(src); filter(f_mail); destination(mail); };<br>
      <br>
      destination messages { file(&quot;/var/log/messages&quot;); };<br>
      log { source(src); filter(f_messages); destination(messages); };</font></td>
  </tr>
</table>
<br>
　以上面的設定內容來說，假使現在執行 &quot;rcpostfix restart&quot; 之後，則此郵件服務重新啟動的訊息，將會記錄在 /var/log/mail.info、/var/log/mail、/var/log/messages 
這三個檔案中。倘若修改一下第二個 log 敘述成：<br>
<font face="細明體">log { source(src); filter(f_mail); destination(mail);<strong> 
</strong></font><font color="#0000FF" face="細明體">flags(final);</font><font face="細明體"><strong> 
</strong>};</font><br>
則此訊息在這個地方將是最後一次被紀錄，因此郵件服務重新啟動的訊息，只會出現在 /var/log/mail.info 及 /var/log/mail 中，而不會出現在 
/var/log/messages 裡。<br>
<br>
<font size="+1"><strong><a name="12"></a><font size="5">9.2.7 syslog-ng.cong 設定檔說明</font></strong></font><br>
<br>
　了解了前面幾小節所提的觀念後，最後就來看看 syslog-ng.conf 的設定內容，不過只針對幾個要點來說明。<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse<font color="#FFFFFF">:~ #</font><strong><font color="#FFFF00"> 
      vi /etc/syslog-ng/syslog-ng.conf<br>
      <br>
      <font color="#FF00FF">####################### <font size="+1">Global options</font></font></font><font color="#FF00FF" size="+1" face="細明體"> 
      </font><font color="#FF00FF">#########################</font></strong><br>
      <br>
      <font face="細明體">options { long_hostnames(off); sync(0); perm(0640); stats(3600); 
      };</font><br>
      <br>
      <strong><font color="#FF00FF">####################</font></strong> <font color="#FF00FF" size="+1"><strong>source 
      my_src { .... };</strong></font></font> <font color="#FF00FF"><strong>#####################</strong></font><font color="#FFFFFF"><br>
      <br>
      <font face="細明體">source src {<br>
      　　　</font><font color="#00FFFF">#<font face="細明體"> include internal syslog-ng 
      messages<br>
      　　　</font>#<font face="細明體"> note: the internal() soure is required!<br>
      </font></font><font face="細明體"><br>
      　　　internal();<strong> </strong><br>
      <br>
      　　　</font><font color="#00FFFF"># <font face="細明體">the following line will 
      be replaced by the<br>
      　　　</font>#<font face="細明體"> socket list generated by SuSEconfig using<br>
      　　　</font>#<font face="細明體"> variables from /etc/sysconfig/syslog:</font></font><font face="細明體"><br>
      <br>
      　　　unix-dgram(&quot;/dev/log&quot;);<strong> </strong><br>
      <br>
      　　　<font color="#00FFFF"># </font></font><font color="#00FFFF" face="細明體">uncomment 
      to process log messages from network:</font><font color="#00FFFF"><font face="細明體"><br>
      　　　</font>#</font></font><font color="#00FFFF"> <font face="細明體">udp(ip(&quot;0.0.0.0&quot;) 
      port(514));</font></font><font color="#FFFFFF" face="細明體"><br>
      　　　</font><font color="#FFFF00">#</font><font color="#FFFF00" face="細明體">&nbsp;</font><font color="#FFFF00" size="2">若欲讓此台主機擔任 
      log server，則可把上一行的註解拿掉，以接受網路上<br>
      </font><font color="#FFFFFF" face="細明體">　　　</font><font color="#FFFF00">#</font><font color="#FFFF00" face="細明體">&nbsp;</font><font color="#FFFF00" size="2">其他主機所傳來的訊息紀錄<font face="細明體">。</font></font><font color="#FFFFFF" face="細明體"><br>
      <strong>};</strong></font><font color="#FFFFFF"><br>
      <br>
      <strong><font color="#FF00FF">#######################</font></strong><font color="#FF00FF" size="+1"><strong> 
      Filter definitions</strong></font></font> <font color="#FF00FF"><strong>#######################</strong></font> 
      <font color="#FFFFFF"><br>
      <br>
      <font face="細明體">filter f_iptables 　{ facility(kern) and match(&quot;IN=&quot;) 
      and match(&quot;OUT=&quot;); };<strong> <br>
      </strong></font><font color="#FFFF00">#</font> <font color="#FFFF00" size="2">此 
      filter 用來過濾核心訊息中，同時包含有 &quot; IN= &quot; 及 &quot; OUT= &quot; 這些字串之所有核心訊息。</font><font face="細明體"><strong><br>
      </strong></font> </font> <p><font color="#FFFFFF" face="細明體">filter f_console 
        　 { level(warn) and facility(kern) and not filter(f_iptables)<br>
        　　　　　　　　　　　 or level(err) and not facility(authpriv); };<strong><br>
        </strong><font color="#FFFF00">#</font></font><font color="#FFFFFF"><font color="#FFFF00" size="2"> 
        此 filter 用來過濾核心訊息之 level 為 warn ( 不包括 f_iptables 的過濾訊息) 者，<br>
        </font><font color="#FFFFFF" face="細明體"><font color="#FFFF00">#</font></font><font color="#FFFFFF"><font color="#FFFF00" size="2"> 
        </font></font><font color="#FFFF00" size="2">或所有 facility (不包括 authpriv 
        ) 其 level 為 err 者。</font></font></p>
      <p><font color="#FFFFFF" face="細明體"><font color="#FFFF00">#</font></font><font color="#FFFFFF"><font color="#FFFF00" size="2"> 
        以下 filter 的過濾條件都很好理解，這裡就不再說明了。</font></font><font color="#FFFFFF" face="細明體"><strong><br>
        </strong>filter f_newsnotice { level(notice) and facility(news); };<br>
        filter f_newscrit 　{ level(crit) and facility(news); };<br>
        filter f_newserr 　 { level(err) and facility(news); };<br>
        filter f_news 　 　 { facility(news); };</font></p>
      <p><font color="#FFFFFF" face="細明體">filter f_mailinfo 　{ level(info) and 
        facility(mail); };<br>
        filter f_mailwarn 　{ level(warn) and facility(mail); };<br>
        filter f_mailerr 　 { level(err, crit) and facility(mail); };<br>
        filter f_mail 　　　{ facility(mail); };</font></p>
      <p><font color="#FFFFFF" face="細明體">filter f_cron 　　　{ facility(cron); };</font></p>
      <p><font color="#FFFFFF" face="細明體">filter f_local 　　 { facility(local0, 
        local1, local2, local3,<br>
        　 　 　 　 　 　 　　　　　　　local4, local5, local6, local7); };</font></p>
      <p><font color="#FFFFFF"><font face="細明體">filter f_acpid 　　 { match('^\[acpid\]:'); 
        };<br>
        filter f_netmgm 　　{ match('^NetworkManager:'); };</font></font></p>
      <p><font color="#FFFFFF" face="細明體">filter f_messages 　{ not facility(news,mail) 
        and not filter(f_iptables); };<br>
        filter f_warn 　　　{ level(warn, err, crit) and not filter(f_iptables); 
        };<br>
        filter f_alert 　　 { level(alert); };</font></p>
      <p><font color="#FFFFFF"><strong><font color="#FF00FF">##### <font size="+1">Most 
        warning and errors on tty10 and on the xconsole pipe:</font> #####</font></strong><br>
        <br>
        <font face="細明體">destination console { file(&quot;/dev/tty10&quot; group(tty) 
        perm(0620)); };<strong><br>
        </strong></font><font color="#FFFF00"># </font><font color="#FFFF00" size="2">這個 
        destination，是要把訊息記錄到第十個終端機，並指定 /dev/tty10 的擁有群組為 tty，<br>
        </font><font color="#FFFFFF"><font color="#FFFF00"># </font><font color="#FFFF00" size="2"></font></font><font color="#FFFF00" size="2">權限是 
        0620。</font><font color="#FFFF00" size="2" face="細明體"><br>
        </font><font face="細明體"><strong><br>
        </strong>log { source(src); filter(f_console); destination(console); };<strong><br>
        </strong></font><font color="#FFFF00">#<font size="2"> </font></font><font color="#FFFF00" size="2">將 
        src 所定義的訊息來源，經 f_console 做訊息過濾後，再將此訊息輸出至 tty10。</font></font></p>
      <p><font color="#FFFFFF" face="細明體">destination xconsole { pipe(&quot;/dev/xconsole&quot; 
        group(tty) perm(0400)); };<br>
        log { source(src); filter(f_console); destination(xconsole); };</font></p>
      <p><font color="#FFFFFF"><strong><font color="#FF00FF">###################</font></strong> 
        <font color="#FF00FF"><strong>root is informed immediately</strong> <strong>###################</strong></font><br>
        <br>
        #<font face="細明體"> destination root { usertty(&quot;root&quot;); };</font><br>
        <font color="#FFFF00">#</font> <font color="#FFFF00" size="2">此 destination 
        會把訊息送至 root 的 console。</font><br>
        <br>
        # <font face="細明體">log { source(src); filter(f_alert); destination(root); 
        };</font><br>
        <font color="#FFFF00">#</font> <font color="#FFFF00" size="2">將 src 所定義的訊息來源，經 
        f_alert 做訊息過濾後，再送往 root 的 console。</font><strong><br>
        <br>
        </strong> <strong><font color="#FF00FF">################</font></strong> 
        <font color="#FF00FF" size="+1"><strong>Mail-messages in separate files:</strong></font></font> 
        <font color="#FF00FF"><strong>################</strong></font><font color="#FFFFFF"><br>
        <br>
        <font face="細明體">destination mailinfo { file(&quot;/var/log/mail.info&quot;); 
        };<br>
        log { source(src); filter(f_mailinfo); destination(mailinfo); };</font></font></p>
      <p><font color="#FFFFFF" face="細明體">destination mailwarn { file(&quot;/var/log/mail.warn&quot;); 
        };<br>
        log { source(src); filter(f_mailwarn); destination(mailwarn); };</font></p>
      <p><font color="#FFFFFF" face="細明體">destination mailerr { file(&quot;/var/log/mail.err&quot; 
        fsync(yes)); };<br>
        log { source(src); filter(f_mailerr); destination(mailerr); };<br>
        </font><font color="#00FFFF"><br>
        # and also all in one file:</font><font color="#FFFFFF"><br>
        <br>
        <font face="細明體">destination mail { file(&quot;/var/log/mail&quot;); };<br>
        log { source(src); filter(f_mail); destination(mail); };<br>
        </font><br>
        <strong><font color="#FF00FF">###################<font size="+1"> acpid 
        messages in one file:</font></font></strong> <font color="#FF00FF"><strong>###################</strong></font><br>
        <br>
        <font face="細明體">destination acpid { file(&quot;/var/log/acpid&quot;); 
        };<br>
        log { source(src); filter(f_acpid); destination(acpid); flags(final); 
        };<strong><br>
        </strong></font><font color="#FFFF00"># <font size="2">應該還記得 final 的意思吧，不太記得的話，回過頭複習複習。</font></font></font></p>
      <p><font color="#FFFFFF"><strong><font color="#FF00FF">############### <font size="+1">NetworkManager 
        messages in one file:</font></font></strong> <font color="#FF00FF"><strong>##############</strong></font><br>
        <br>
        <font face="細明體">destination netmgm { file(&quot;/var/log/NetworkManager&quot;); 
        };<br>
        log { source(src); filter(f_netmgm); destination(netmgm); flags(final); 
        }; </font></font> <font color="#FFFFFF"><br>
        <br>
        <strong><font color="#FF00FF">####################</font></strong> <font color="#FF00FF"><strong><font size="+1">Cron-messages 
        in one file:</font></strong> <strong>####################</strong> </font><br>
        <font color="#00FFFF"># (don't forget to provide logrotation config)</font><br>
        <br>
        # <font face="細明體">destination cron { file(&quot;/var/log/cron&quot;); 
        };</font><br>
        # <font face="細明體">log { source(src); filter(f_cron); destination(cron); 
        };<strong><br>
        </strong></font><br>
        <strong><font color="#FF00FF">##############</font></strong> <font color="#FF00FF" size="+1"><strong>Some 
        boot scripts use/require local[1-7]:</strong></font></font> <font color="#FF00FF"><strong>##############</strong></font><font color="#FFFFFF"><br>
        <br>
        <font face="細明體">destination localmessages { file(&quot;/var/log/localmessages&quot;); 
        };<br>
        log { source(src); filter(f_local); destination(localmessages); };<br>
        </font><br>
        <strong><font color="#FF00FF">####</font></strong> <font color="#FF00FF" size="+1"><strong>All 
        messages except iptables and the facilities news and mail:</strong></font></font> 
        <font color="#FF00FF"><strong>####</strong></font><font color="#FFFFFF"><br>
        <br>
        <font face="細明體">destination messages { file(&quot;/var/log/messages&quot;); 
        };<br>
        log { source(src); filter(f_messages); destination(messages); };</font></font></p>
      <p></p>
      <font color="#FFFFFF"><strong><font color="#FF00FF">##############</font></strong> 
      </font> <font color="#FF00FF" size="+1"><strong>Firewall (iptables) messages 
      in one file:</strong></font> <font color="#FF00FF"><strong>##############</strong></font><font color="#FFFF00">&nbsp; 
      </font><font color="#FFFFFF"><br>
      <br>
      <font face="細明體">destination firewall { file(&quot;/var/log/firewall&quot;); 
      };<br>
      log { source(src); filter(f_iptables); destination(firewall); }; <br>
      </font><br>
      <strong><font color="#FF00FF">###############</font></strong> <font color="#FF00FF" size="+1"><strong>Warnings 
      (except iptables) in one file:</strong></font></font> <font color="#FF00FF"><strong>###############</strong></font><font color="#FFFFFF"><br>
      <br>
      <font face="細明體">destination warn { file(&quot;/var/log/warn&quot; fsync(yes)); 
      };<br>
      log { source(src); filter(f_warn); destination(warn); };<strong> </strong></font></font> 
      <font color="#FFFFFF"><br>
      <br>
      <strong><font color="#FF00FF">###################</font></strong> <font color="#FF00FF" size="+1"><strong>keep 
      all messages in one file:</strong></font></font> <font color="#FF00FF"><strong>###################</strong></font><font color="#FFFFFF"><br>
      <font color="#00FFFF"># (don't forget to provide logrotation config)</font><br>
      <br>
      # <font face="細明體">destination allmessages { file(&quot;/var/log/allmessages&quot;); 
      };</font><br>
      # <font face="細明體">log { source(src); destination(allmessages); };</font><br>
      </font></td>
  </tr>
</table>
<p>　修改了 syslog-ng.conf 後，請記得重新啟動 syslog-ng。</p>
<table width="29%" border="0">
  <tr> 
    <td height="24" nowrap bgcolor="#CCCCCC"><font color="#000000">suse:~ #<strong> 
      rcsyslog restart</strong></font></td>
  </tr>
</table>
<p>　不過如果之前您有按照第一節 syslogd 設定方式而修改過 /etc/sysconfig/syslog 的話，那請先執行 &quot;<font color="#0000FF">rcsyslog 
  stop</font>&quot; ，然後把 /etc/sysconfig/syslog 改回原來的預設值：</p>
<table width="100%" border="0" bgcolor="#000000">
  <tr> 
    <td height="50"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
      /etc/sysconfig/syslog<br>
      </strong><font color="#FFFFFF">SYSLOG_DAEMON=&quot;<font color="#FFFF00">syslogd-ng</font>&quot;</font> 
      <br>
      <font color="#FFFFFF">SYSLOGD_PARAMS=&quot;&quot;</font></font></font></td>
  </tr>
</table>
<p> 　最後再啟動 syslog-ng 即可：</p>
<table width="29%" border="0">
  <tr> 
    <td height="24" nowrap bgcolor="#CCCCCC"><font color="#000000">suse:~ #<strong> 
      rcsyslog start</strong></font></td>
  </tr>
</table>
<p> <br>
  <font color="#0000FF"><strong><font size="+1"><font size="+2"><a name="13"></a><font size="6">9.3 
  紀錄檔輪替</font></font></font> <font size="6">( logrotate )</font><br>
  </strong></font><br>
  <font size="+1"><strong> <a name="14"></a><font size="5">9.3.1 紀錄檔輪替的概念</font></strong></font><br>
  　<br>
  　在了解紀錄檔的重要性後，不知大家有沒有想過一個問題，系統的紀錄檔每天記載那麼多資訊，且這個動作一直持續著在進行著，那會不會哪天把整顆硬碟給塞爆了呢 ? 
  答案是否定的，因為<font color="#0000FF">系統每天都會交由 /usr/sbin/logrotate 這支程式去讀取 /etc/logrotate.conf 
  檔案</font>，而 logrotate.conf 檔案的內容，主要就是關於紀錄檔輪替方面的設定。<br>
  <br>
  　何謂輪替呢 ? 以 /var/log/mail 紀錄檔來說，假使我們設定一週執行一次輪替，又輪替檔 (紀錄檔在經過輪替後所產生的檔案) 數目最多三個，則當執行第一次紀錄檔輪替時，mail 
  會變成 mail.1，也就是 mail.1 的內容就是之前 mail 的內容，緊接著系統就會再製造另一個新的空的 mail 檔案出來 ﹔執行第二次輪替時，mail.1 
  會變成 mail.2，mail 變成 mail.1，然後再 create 一個新的 mail 檔案 ﹔而在執行第三次輪替後就會有 mail.1、mail.2、mail.3 
  等三個輪替檔 (紀錄檔的備份) ﹔接著在執行第四次輪替時，由於當初設定輪替檔最多只能有三個，所以 mail.3 就會先被移除，然後 mail.2 變 mail.3， 
  mail.1 變 mail.2，mail 變 mail.1。按照這個輪替原理來推算的話，就算今天進行第一百次輪替時，輪替檔數目還是只有三個，所以不會讓紀錄檔的內容一直持續成長下去。<br>
  <br>
  　 一開始不是有提到 logrotate 程式每天都會載入 logrotate.conf 嗎，從哪可看得出來呢 ? 找找看在 /etc/cron.daily 
  目錄下是不是有個叫 logrotate 的 script，再看看其內容：</p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<strong> <font color="#FFFF00">cat 
      /etc/cron.daily/logrotate</font><br>
      </strong> #!/bin/sh</font> <br>
      <br>
      <font color="#FFFFFF">TMPF=`mktemp /tmp/logrotate.XXXXXXXXXX`</font> <br>
      <br>
      <font color="#FFFF00">/usr/sbin/logrotate /etc/logrotate.conf</font><font color="#FFFFFF"> 
      2&gt;&amp;1 | tee $TMPF<br>
      EXITVALUE=${PIPESTATUS[0]}</font> <br>
      <br>
      <font color="#FFFFFF">if [ $EXITVALUE != 0 ]; then<br>
      　# wait a sec, we might just have restarted syslog<br>
      　sleep 1<br>
      　# tell what went wrong<br>
      　/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;<br>
      　/bin/logger -t logrotate -f $TMPF<br>
      fi</font> <br>
      <br>
      <font color="#FFFFFF">rm -f $TMPF<br>
      exit 0</font></td>
  </tr>
</table>
<br>
　這個意思是說當這支 script 在執行時， logrotate 程式會載入 /etc/logrotate.conf 檔案，而當執行有誤時 (即退出值為非 
0)，在紀錄檔 /var/log/messages 內就會出現 &quot;logrotate: ALERT exited abnormally with 
[127]&quot; 這一類的訊息。<br>
<br>
<strong><font size="+1"><a name="15"></a><font size="5">9.3</font></font></strong><font size="5"><strong>.2 
設定 logrotate.conf</strong></font><br>
<br>
<font color="#000000">　有了紀錄檔輪替的概念之後，接著就來介紹紀錄檔輪替的主要設定檔內容：<br>
<br>
</font> 
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
      /etc/logrotate.conf</strong></font><br>
      <br>
      <font color="#0099FF"># see &quot;man logrotate&quot; for details<br>
      # rotate log files weekly</font><br>
      <strong>weekly </strong><br>
      <font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">設定紀錄檔每週執行一次輪替。<br>
      </font><font color="#FFFFFF"><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">您還可以使用 
      daily (每天輪替) 及 monthly (每月輪替) 去做設定。</font><font color="#FFFFFF"><br>
      </font> <font color="#FFFFFF"><br>
      <font color="#0099FF"># keep 4 weeks worth of backlogs</font><br>
      <strong>rotate 4 <br>
      </strong><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">保持四個輪替檔 
      (備份的紀錄檔)，也就是說您最多只能產生四個輪替檔啦。</font><font color="#FFFFFF"><strong><br>
      </strong></font> <font color="#FFFFFF"><br>
      <font color="#0099FF"># create new (empty) log files after rotating old 
      ones</font><br>
      <strong>create</strong><br>
      <font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">紀錄檔進行輪替後，會建立一個新的、空的紀錄檔出來。</font><font color="#FFFFFF"><br>
      </font> <font color="#FFFFFF"><br>
      <font color="#0099FF"># uncomment this if you want your log files compressed<br>
      <strong>#compress</strong> <br>
      </font><font color="#FFFFFF"><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">紀錄檔輪替後所產生的輪替檔要不要壓縮 
      (預設是採 gzip 壓縮)，<br>
      </font><font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
      </font></font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2">如果要的話，就將註解拿掉。</font><font color="#0099FF"><br>
      </font></font> 
      <p><font color="#0099FF"> # uncomment these to switch compression to bzip2<br>
        <font color="#FFFFFF"><strong>compresscmd /usr/bin/bzip2<br>
        uncompresscmd /usr/bin/bunzip2<br>
        </strong><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">當 
        compress 參數被指定的前提下，將輪替檔改採 bzip2 壓縮。</font></font></p>
      <font color="#0099FF"># RPM packages drop log rotation information into 
      this directory</font><font color="#FFFFFF"><br>
      <strong>include /etc/logrotate.d</strong><br>
      <font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">這行設定的主要意思是說，在 
      /etc/logrotate.d/ 目錄下的所有檔案都一併會被讀入。<br>
      </font><font color="#FFFFFF"><font color="#00FFFF"><br>
      # </font></font><font color="#00FFFF" size="2">在剛剛前面介紹過的那些參數是屬於 global 參數，而位於 
      /etc/logrotate.d 下的檔案中，</font><br>
      <font color="#FFFFFF"><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">如果有未設定到的參數，則會套用 
      global 的參數，當兩個地方的設定參數起衝突時，</font><br>
      <font color="#FFFFFF"><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2"> 
      是以 /etc/logrotate.d 目錄下的檔案為主。</font><font color="#FFFFFF"><br>
      </font> <font color="#FFFFFF"><br>
      <font color="#0099FF"># no packages own wtmp -- we'll rotate them here<br>
      <strong>#/var/log/wtmp {<br>
      # monthly<br>
      # create 0664 root utmp<br>
      # rotate 1<br>
      #} <br>
      </strong></font><font color="#FFFFFF"><font color="#00FFFF"># </font></font></font><font color="#00FFFF" size="2">您也可以把紀錄檔的輪替設定在這裡。</font><font color="#00FFFF" size="2">至於此處的設定是說/var/log/wtmp 
      紀錄檔會</font><font color="#FFFFFF"><br>
      <font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">每個月輪替一次，</font><font color="#FFFFFF">&nbsp;</font><font color="#00FFFF" size="2">且在輪替後所產生的新紀錄檔，其權限為 
      664，擁有者及擁有群組<br>
      </font><font color="#FFFFFF"><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">為 
      root 及 utmp，</font><font color="#FFFFFF"><font color="#00FFFF" size="2">並且最多只能有一個紀錄檔的備份。</font><font color="#0099FF"><strong></strong></font></font><font color="#FFFFFF"><font color="#0099FF"><strong><br>
      </strong></font></font> <br>
      <font color="#0099FF"># system-specific logs may be also be configured here. 
      </font></td>
  </tr>
</table>
　<br>
　緊接著就來探討一下剛剛提到的 /etc/logrotate.d 中，那些檔案裡怎麼設定紀錄檔方面的輪替：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<strong> <font color="#FFFF00">vi 
      /etc/logrotate.d/syslog</font></strong><font color="#00FFFF"><br>
      </font> <font face="細明體">/var/log/warn /var/log/messages /var/log/allmessages 
      /var/log/localmessages /var/log/firewall {<br>
      　compress　<br>
      　dateext　<br>
      　maxage 365　<br>
      　rotate 99　<br>
      　missingok　<br>
      　<font color="#000000"><font color="#FFFFFF">notifempty</font></font></font> 
      <font face="細明體"><br>
      　size +4096k　<br>
      　create 640 root root　<br>
      　sharedscripts　<br>
      　postrotate　<br>
      　　/etc/init.d/syslog reload　<br>
      　endscript<br>
      }</font></font></td>
  </tr>
</table>
<br>
<font color="#FFFFFF"><font color="#000000">　首先您需先指出要設定輪替的紀錄檔有哪些，當要對多個紀錄檔做相同輪替方面的設定時，每個紀錄檔間需以空白字元隔開，然後再把輪替方面的相關參數設定在 
{ } 內。</font></font>以下就針對這些參數做說明。<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td width="2%">&nbsp;</td>
    <td width="3%" align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td width="95%"><font color="#000099"><strong>compress</strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">紀錄檔輪替後要壓縮，不過此處非採 
      gzip 壓縮噢，因為 global 處已經指定使用 bzip2 壓縮了。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>dateext</strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">將輪替檔檔名中的數字，改成以時間格式來顯示，如 
      mail-20070125.bz2。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>maxage 365</strong>　</font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">移除 365 
      天以前的輪替檔。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>rotate 99</strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">最多能有 
      99 個輪替檔 (紀錄檔備份)。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>missingok</strong>&nbsp;</font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">輪替時如果紀錄檔不存在，不需提示任何訊息。預設為 
      nomissingok。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>notifempty</strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">如果紀錄檔是空的，不進行輪替。預設為 
      ifempty。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>size +4096k</strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">當紀錄檔大小超過 
      4096 k 時才進行輪替。您亦可使用 M 來做單位，若不指定單位則為 bytes。</font></font></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>create 640 root root</strong>&nbsp;</font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#000000">輪替後所產生的新紀錄檔，其權限為 640，擁有者及擁有群組皆為 root。&nbsp;&nbsp;</font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>sharedscripts</strong>&nbsp;</font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><p><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">如果有多個紀錄檔同時被輪替時，則介於 
        postrotate 及 endscript 之間的程式，</font></font></font></p>
      <p><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">只執行一次即可。</font></font></font></p></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><font color="#000099"><strong>postrotate</strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><font color="#FFFFFF"><font color="#00FFFF"><font color="#000000">紀錄檔輪替後，會執行位於 
      postrotate 及 endscript 之間的程式。而這裡是設定輪替後執行 &quot;/etc/init.d/syslog reload&quot;，至於執行這個動作的主要目的，是因為輪替後會產生一個新的紀錄檔，因此要讓 
      syslogd ( syslog-ng ) 重新認識這個新檔案才行。</font></font></font></td>
  </tr>
</table>
<br>
　再看另外一個檔案：<br>
<br>
<table width="100%" border="0" bgcolor="#000000">
  <tr>
    <td><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi /etc/logrotate.d/wtmp</strong></font><br>
      <br>
      /var/log/wtmp {<br>
      　compress<br>
      　dateext<br>
      　maxage 365<br>
      　rotate 99<br>
      　size=+400k<br>
      　notifempty<br>
      　missingok<br>
      　<font color="#FFFF00">copytruncate</font><br>
      } <br>
      <font color="#00FFFF"># </font><font color="#00FFFF" size="2">這裡只有一個 copytruncate 
      未介紹過。copytruncate 是說在進行紀錄檔輪替時，會先將</font><br>
      <font color="#00FFFF"># </font><font color="#FFFFFF"><font color="#00FFFF" size="2">紀錄檔</font></font><font color="#00FFFF" size="2">的內容複製到輪替檔後才清除紀錄檔的內容，因此從頭到尾紀錄檔都還存在，所以您不需</font><br>
      <font color="#00FFFF"># </font> <font color="#00FFFF" size="2">設定 create 
      參數 (就算設定上去也會被忽略 )，當然更不需要執行 reload 的動作囉。</font></font></td>
  </tr>
</table>
<p> <br>
  <strong><font color="#000000" size="+1"><a name="16"></a><font size="5">9.3.3 
  syslogd 與 logrotate 的練習範例</font></font></strong><br>
  <font color="#000000"><br>
  　以下舉個 syslogd 與 logrotate 的實際範例給各位做參考，看看這兩者如何搭配起來做設定。<br>
  　</font><font size="4"><strong><br>
  </strong></font><font size="+1"><strong><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"></strong></font> 
  <font size="4"><strong> 要求事項如下</strong></font></p>
<p><font color="#0000FF" face="細明體">一. 設定 syslog.conf：</font></p>
<blockquote> 
  <ol>
    <li>將有關核心的所有訊息紀錄在 /var/log/kernel 檔案 ﹔另外把核心所出現的訊息，其訊息等級在 err 以上 (含 err) 時，紀錄在第十個終端機上。</li>
    <li>將郵件服務的所有訊息紀錄在 /var/log/maillog 裡，並採取非同步寫入的方式。</li>
    <li>將排程服務的所有訊息紀錄在 /var/log/cron。</li>
    <li>除了核心訊息、排程服務及郵件服務的訊息外，其他所有的訊息都紀錄在 /var/log/allmessages 裡。</li>
  </ol>
</blockquote>
<p><font color="#0000FF" face="細明體">二. 設定紀錄檔輪替：</font><br>
  　　<br>
  　　針對以上這些紀錄檔，於 /etc/logrotate.d/syslog 內，做相同輪替方面的設定。</p>
<blockquote> 
  <ol>
    <li>紀錄檔輪替後，採 gzip 壓縮。</li>
    <li>最多只能有八個紀錄檔的備份檔 (輪替檔)。</li>
    <li>當紀錄檔大小超過 2 M 時才進行輪替。</li>
    <li>如果紀錄檔是空的，則不進行輪替。</li>
    <li>紀錄檔輪替後所產生的新紀錄檔，其權限為 640，擁有者及擁有群組皆為 root。</li>
  </ol>
</blockquote>
<p><font color="#0000FF" face="細明體">三. 將您目前所設定的這台主機，當成 log (syslogd) server 來使用。</font><font face="細明體"><br>
  </font><br>
  <strong><font size="+1"><strong><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"></strong></font> 
  <font size="4"><strong> </strong></font><font size="4">相關設定如下</font></strong><br>
  <br>
  <font color="#0000FF" face="細明體">一. 設定 syslog.conf：</font></p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> 
      <strong>vi /etc/syslog.conf</strong></font><br>
      <font face="細明體">kern.*　　　　　　　　　　　　　　　 /var/log/kernel<br>
      kern.err　　　　　　　　　　　　　　 /dev/tty10<br>
      mail.*　　　　　　　　　　　　　　　-/var/log/maillog<br>
      cron.*　　　　　　　　　　　　　　　 /var/log/cron<br>
      *.*;kern.none;cron.none;mail.none　　/var/log/allmessages </font></font></td>
  </tr>
</table>
<p><font color="#0000FF" face="細明體">二. 設定紀錄檔輪替：</font></p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
      /etc/logrotate.d/syslog</strong></font><br>
      <br>
      <font face="細明體">/var/log/kernel /var/log/maillog /var/log/cron /var/log/allmessages 
      {<br>
      　 compress<br>
      　 <font color="#FFFFFF">compresscmd /usr/bin/gzip</font> <br>
      　 rotate 8<br>
      　 size +2M<br>
      　 notifempty<br>
      　 create 640 root root<br>
      　 sharedscripts<br>
      　 postrotate<br>
      　　　/etc/init.d/syslog reload<br>
      　endscript<br>
      } </font></font></td>
  </tr>
</table>
<p><font color="#0000FF" face="細明體">三. 設定 log server：</font></p>
<table width="70%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<strong> <font color="#FFFF00">vi 
      /etc/sysconfig/syslog</font></strong><br>
      SYSLOGD_PARAMS=&quot;-r&quot; <br>
      <br>
      suse:~ # <font color="#FFFF00"><strong>rcsyslog restart </strong></font></font></td>
  </tr>
</table>
<p><font color="#0000FF"><strong><br>
  <font size="+2"><a name="17"></a><font size="6">9.4 登入的監控</font></font></strong></font><br>
  <br>
  　這裡介紹三個與使用者登入紀錄有關的檔案，不過您無法直接瀏覽這些檔案的內容，必須透過指令才能存取這些檔案。<br>
  <br>
  <font color="#000000"><strong><a name="18"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
  <font size="4">/var/log/lastlog (指令 lastlog)</font></strong></font><br>
  <br>
  　紀錄使用者最後一次登入系統的時間。只要是 /etc/passwd 檔案中所存在的帳號，都會紀錄在這個檔案內 (除了 nobody 帳號)，因此您可以了解到有哪些帳號從未登入系統。</p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
      lastlog</strong></font><br>
      <font face="細明體">Username　　Port　　 From　　　　　　 Latest<br>
      root　　　　tty1　　　　　　　　　　　Wed Jan 31 11:31:15 +0800 2007<br>
      bin　　　　　　　　　　　　　　　　　 **Never logged in**<br>
      daemon　　　　　　　　　　　　　　　　**Never logged in** <br>
      </font></font><font color="#00FFFF" size="2" face="細明體">　　：略　　　　　　　　　　　　　　　　　　　：略</font><font color="#FFFFFF" face="細明體"><br>
      barry　　　 pts/2　　192.168.1.2　　　Tue Jan 30 15:28:56 +0800 2007<br>
      mary　　　　tty3　　　　　　　　　　　Mon Jan 29 11:11:47 +0800 2007</font></td>
  </tr>
</table>
<p> <strong><a name="19"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
  <font size="4">/var/run/utmp (指令 who、w 或 finger)</font></strong></p>
<p>　紀錄目前有哪些使用者登入系統，包括本機及遠端登入。而當使用者登出後，就會從此檔案中被移除。</p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><p><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>who</strong></font></font> 
        <br>
        <font color="#FFFFFF" face="細明體">root　　　tty1　　　Sep 23 00:23</font><font face="細明體"><br>
        <font color="#FFFFFF">mary</font></font><font color="#FFFFFF" face="細明體">　　　tty3　　　Sep 
        23 00:24</font><font face="細明體"><br>
        </font><font color="#FFFFFF" face="細明體">root　　　pts/0　　 Sep 22 23:29 (192.168.1.2)</font> 
      </p></td>
  </tr>
</table>
<br>
　一般使用者也可以存取這個檔案，但若您不想讓使用者查詢誰在線上的話，可以修改一下 utmp 的權限：<br>
<br>
<table width="30%" border="0" bgcolor="#CCCCCC">
  <tr> 
    <td nowrap>suse:~ #<strong> chmod 660 /var/run/utmp</strong></td>
  </tr>
</table>
<p><font color="#000000"><strong><a name="20"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"><font size="4"> 
  /var/log/wtmp (指令 last )<br>
  <br>
  </font></strong>　紀錄使用者登入及登出的時間，並會統計登入至登出的存續時間。<strong> </strong></font></p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
      last</strong></font><br>
      <font face="細明體">tina　　:0　　　　　　　　　　　Fri Sep 23 14:24 - 14:36 (00:12)<br>
      barry　 tty3 　　　　　　　　 　Fri Sep 23 00:49 still logged in<br>
      mary　　pts/1　　 192.168.1.2　 Fri Sep 23 00:44 still logged in<br>
      mary　　tty3Fri 　　　　　　　　Sep 23 00:24 - 00:49 (00:25)<br>
      root　　tty1Fri 　　　　　　　　Sep 23 00:23 still logged in</font></font></td>
  </tr>
</table>
<p>　當使用者登入時，login 程式會將此次登入的時間地點寫入 /var/log/lastlog 裡 ﹔接著開啟 /var/run/utmp，也同時把登入資料寫入其中，一直到使用者登出後，才將資料從 
  utmp 中移除 ﹔最後開啟 /var/log/wtmp，把使用者在 utmp 中的資料寫入 wtmp 中，而當使用者登出時會再寫入一次，只不過這次會把使用者從登入到登出的存續時間做個統計並紀錄下來。</p>
<br>
<p align="center"><font color="#000000"><em>copyright &copy; 2006 by barry ( 柏青哥 
  )<br>
  </em></font></p>
</body>
</html>
