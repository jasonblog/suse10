<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>柏青哥的 SuSE Linux -- 排程工作與系統紀錄檔</title>
<style type="text/css">
<!--
a {
	color: #000099;
	text-decoration: none;
}
-->
</style>
</head>

<body background="sumtextb.jpg" tppabs="http://www.suse.url.tw/sumtextb.jpg" link="#000099" vlink="#000099" alink="#000099" leftmargin="40">
<a href="index-1.htm" tppabs="http://www.suse.url.tw/sles10/index.htm" target="_blank"><img src="first.GIF" tppabs="http://www.suse.url.tw/first.GIF" width="40" height="40" border="0" align="middle"></a> 
　　作者：陳柏菁<font size="+1">　</font>E-mail：pachingko@ms96.url.com.tw 
<table width="100%" border="0">
  <tr> 
    <td nowrap> <div align="left"></div>
      <div align="center"><font size="+2"><strong><font color="#000000" size="7"><strong>第八章　排程工作</strong></font></strong></font></div>
      <div align="center"></div></td>
  </tr>
</table>
<font color="#000000"><font color="#660066"><br>
<font color="#000099" size="+1"><strong>索引：</strong></font><br>
</font></font>
<table width="100%" border="0">
  <tr> 
    <td colspan="3"><font color="#000099"><strong>8.1 <a href="#1">crontab 排程</a></strong></font></td>
  </tr>
  <tr> 
    <td width="3%"><font color="#000099">&nbsp;</font></td>
    <td width="5%" align="center" valign="top" nowrap><font color="#000099">8.1.1</font></td>
    <td width="92%"><a href="#2">crontab 所需套件及套件內容</a></td>
  </tr>
  <tr> 
    <td><font color="#000099">&nbsp;</font></td>
    <td align="center" valign="top" nowrap><font color="#000099">8.1.2</font></td>
    <td><font color="#000099"><a href="#3">設定 crontab 排程</a> ---<br>
      <a href="#4">使用 crontab 指令建立排程</a> <br>
      <a href="#5">編輯排程設定檔</a> (<a href="#20">/etc/crontab</a>、<a href="#21">/etc/cron.d/*</a>)<br>
      <a href="#6">限定使用者執行 crontab </a> (<a href="#22">/etc/cron.deny</a>、<a href="#23">/etc/cron.allow</a>)</font></td>
  </tr>
  <tr> 
    <td colspan="3"><font color="#000099"><strong>8.2 <a href="#7">at 排程</a></strong></font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">8.2.1</font></td>
    <td><a href="#8">at 所需套件及套件內容</a></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center" valign="top" nowrap><font color="#000099">8.2.2</font></td>
    <td><font color="#000099"><a href="#9">設定 at 排程</a> ---<br>
      <a href="#10">使用 at 指令建立 at 排程</a> <br>
      <a href="#11">at 相關檔案 </a> <br>
      <a href="#12">使用 batch 指令建立 at 排程 </a> </font></td>
  </tr>
</table>
<br>
<hr>
<p><font color="#0000FF"><font color="#000000">　如果您是一個系統管理者</font></font>，相信每天都會有大大小小的事情等著您去處理，所以有時候難免會遺忘一些例行性要執行的工作，比如備份計劃、分析系統紀錄檔、清除不必要的暫存檔、列印大檔案 
  &#8230; 等等 ﹔而有些工作在進行時，或許會耗用較多的系統資源，因此您可能會想在系統負載較低時才進行這些工作，那最佳時段應該就是在夜深人靜的凌晨時分了，這時候聰明的你可能已經想到把這些工作給它編入排程，這樣一來，當所指定執行排程的時間一到，系統就會自動幫我們去做這些事情。<br>
  <br>
  　在 Linux 上要編寫排程時，常見到的有 crontab 及 at 兩種方式，不過兩者可是有差別的噢。利用 crontab 所設計的排程工作會週期性 
  (periodic) 的執行，只要您不將它終止，就會永無止境的執行下去 ﹔至於 at 排程則只會在您指定的時間 (particular time) 執行那麼一次而已，執行完畢就沒了。緊接著就來介紹如何設計 
  crontab 及 at 排程。</p>
<p> <strong><font color="#0000FF" size="+1"><font size="+2"><a name="1"></a><font size="6">8.1 
  </font></font></font><font color="#0000FF" size="6">crontab 排程</font><font color="#0000FF"><br>
  <br>
  </font></strong><font color="#0000FF"> </font> <font size="+1"><strong><a name="2"></a><font size="5">8.1.1 
  crontab 所需套件及套件內容</font></strong></font><br>
  <br>
  　先確定 cron 套件有安裝，並檢視一下套件內容：</p>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
      rpm -qa | grep cron</strong></font><br>
      cron-4.1-45.4<br>
      <br>
      suse:~ #<font color="#FFFF00"> <strong>rpm -ql cron</strong></font><br>
      </font> 
      <table width="100%" border="0">
        <tr> 
          <td width="18%" align="left" valign="top" nowrap><font color="#FFFFFF">/etc/crontab</font></td>
          <td width="82%"><font color="#00FFFF" size="2">排程設定檔。只有管理者可以將排程工作設定在這裡。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/etc/init.d/cron</font></td>
          <td><font color="#00FFFF" size="2">管理排程服務的 script。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/etc/cron.deny</font></td>
          <td><font color="#00FFFF" size="2">設定拒絕執行 crontab 指令的使用者名單。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/bin/crontab</font></td>
          <td><font color="#00FFFF" size="2">編寫排程工作的指令。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/sbin/cron</font></td>
          <td><font color="#00FFFF" size="2">提供排程服務的 daemon。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/sbin/rccron</font></td>
          <td><font color="#00FFFF" size="2">為一符號連結檔，連結至 /etc/init.d/cron。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/var/spool/cron/tabs</font></td>
          <td><font color="#00FFFF" size="2">執行 crontab 指令所編寫好的排程，會寫入此目錄下的檔案內。</font></td>
        </tr>
      </table>
      <br>
      <font color="#00FF00" size="2">註：</font><font color="#00FF00" size="2">所謂的 
      <strong>daemon</strong>，就是泛指那些提供服務的程式。</font></td>
  </tr>
</table>
<p> 　crontab 排程工作中的執行主程式為 /usr/sbin/cron，而當 cron 啟動後，預設每分鐘都會去自動載入相關的檔案一次，如 /etc/crontab、/var/spool/cron/tabs/*、/etc/cron.d/* 
  等，所以當您編寫好排程工作後，不需要重新啟動 cron script，是不是很方便呢 !<br>
  <br>
  <font color="#000000" size="+1"><strong><a name="3"></a><font size="5">8.1.2 
  設定 crontab 排程</font></strong></font><br>
  <br>
  　編寫 crontab 排程的方式，一般常用到的有以下幾種：</p>
<blockquote> 
  <ol>
    <li><font color="#0000FF">使用 crontab 指令。</font></li>
    <li><font color="#0000FF">將排程工作設定在 /etc/crontab 或 /etc/cron.d 目錄下的檔案。</font></li>
    <li><font color="#0000FF">於 /etc/cron.hourly、/etc/cron.daily、/etc/cron.weekly、/etc/cron.monthly 
      等目錄中，安置您事先寫好的 scripts。</font></li>
  </ol>
</blockquote>
　最後一種方式應該很好理解，比如說您希望某些 scripts 能每天或每週被執行的話，那就分別把它們安置在 /etc/cron.daily 及 /etc/cron.weekly 
目錄下即可。因此以下只教大家如何利用前面兩種方式來編輯 crontab 排程。<br>
<br>
<strong><a name="4"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
<font size="+1">使用 crontab 指令建立排程</font></strong><br>
<br>
　每個使用者預設都可以執行這個指令來編寫屬於自己的排程工作。<br>
<br>
<strong>指令語法</strong>：<br>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><strong><font face="細明體">crontab [-u user] file<br>
      crontab [-u user] {-l|-r|-e}</font></strong></td>
  </tr>
</table>
<br>
<strong>參數說明</strong>：<br>
<table width="100%" border="1">
  <tr> 
    <td width="7%" align="center" valign="middle" nowrap><font color="#000099">-u</font></td>
    <td width="93%" nowrap><font color="#000099">指定要編輯、列出或移除哪個使用者的 crontab 排程。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">-e</font></td>
    <td><font color="#000099">編輯 (edit) 排程工作。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">-l</font></td>
    <td><font color="#000099">列出 (list) 排程工作。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">-r</font></td>
    <td><font color="#000099">移除 (remove) 排程工作。</font></td>
  </tr>
</table>
<br>
　當執行 &quot;<font color="#0000FF">crontab</font> <font color="#0000FF">-e</font>&quot; 
時，就是在編輯自己的排程工作，而在您按下<strong> </strong>[Insert] 鍵以後就可以開始做編輯了，完成後輸入 &quot;:wq&quot; 
存檔離開即可。<br>
<br>
　再來認識一下 crontab 的設定格式：<br>
<br>
<table width="73%" border="1">
  <tr> 
    <td width="11%" align="center" nowrap bgcolor="#CCCCCC"><font color="#000099"><strong>設定欄位</strong></font></td>
    <td width="13%" align="center"><font color="#000099">分鐘</font></td>
    <td width="14%" align="center"><font color="#000099">小時</font></td>
    <td width="13%" align="center"><font color="#000099">日期</font></td>
    <td width="14%" align="center"><font color="#000099">月份</font></td>
    <td width="14%" align="center"><font color="#000099">星期</font></td>
    <td width="21%" align="center" nowrap><font color="#000099">執行工作</font></td>
  </tr>
  <tr> 
    <td align="center" nowrap bgcolor="#CCCCCC"><font color="#000099"><strong>設定範圍</strong></font></td>
    <td align="center"><font color="#000099">0-59</font></td>
    <td align="center"><font color="#000099">0-23</font></td>
    <td align="center"><font color="#000099">1-31</font></td>
    <td align="center"><font color="#000099">1-12</font></td>
    <td align="center"><font color="#000099">0-7</font></td>
    <td align="center" nowrap><font color="#000099">command</font></td>
  </tr>
</table>
<br>
　前面五個欄位是設定執行排程的時間，最後一個欄位就是您要執行的工作，可以是一些程式的組合或者是 script。另外星期的那個欄位如果是 0 或 7，就代表是星期天。<br>
<br>
　在時間欄位裡，可以額外使用一些符號來讓時間的設定更具有彈性，茲列舉如下：<br>
<br>
<table width="100%" border="1">
  <tr bgcolor="#CCCCCC"> 
    <td align="center" valign="middle" nowrap><font color="#000099"><strong>符號</strong></font></td>
    <td><font color="#000099"><strong>代　表　意　義</strong></font></td>
  </tr>
  <tr> 
    <td width="7%" align="center" valign="middle" nowrap><font color="#000099">-</font></td>
    <td width="93%"><font color="#000099">表示一段連續時間範圍的符號，比如在月份欄位輸入 3-6，就代表 3、4、5、6 
      月。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">,</font></td>
    <td><font color="#000099">個別指定時間的分隔符號，比如在星期欄位輸入 3,6，就代表星期三及星期六。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">*</font></td>
    <td><font color="#000099">表示所有時間的符號，比如在分鐘欄位輸入 *，就代表每一分鍾。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">/</font></td>
    <td><font color="#000099">其後需指定一數字，表示每間隔多久時間之意，比如在小時欄位輸入 0-23/2，就代表 0、2、4、6、&#8230; 
      、22 時之意。</font></td>
  </tr>
</table>
<br>
　接著請看以下的基本範例：<br>
<br>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><strong>範例一</strong>：在每年的十二月二十日下午四點三十分執行排程工作。<br>
      <br>
      <font face="細明體"> 　　　　</font><font color="#0000FF" face="細明體">30 　16　 20 　12　 * 　程式</font><font face="細明體"><br>
      </font><br>
      <strong>範例二</strong>：在每個月的二十日下午四、五、六點三十分執行排程工作。<br>
      <br>
      <font color="#0000FF" face="細明體">　　　　30 　16-18　 20 　* 　*　 程式</font><br>
      <br>
      <strong>範例三</strong>：在 12/5~12/26 期間，每隔三天的晚上十一點十分執行排程工作。<br>
      <br>
      <font color="#0000FF" face="細明體">　　　　10 　23 　5-26/3 　12 　* 　程式</font><br>
      <br>
      <strong>範例四</strong>：在星期三及星期六的凌晨兩點二十分執行排程工作。<br>
      <br>
      <font color="#0000FF" face="細明體">　　　　20 　02 　* 　* 　3,6 　程式</font><font color="#0000FF"><br>
      </font><br>
      <strong>範例五</strong>：每隔五分鐘執行一次排程工作。<br>
      <br>
      <font color="#0000FF" face="細明體">　　　　*/5　*　*　*　*　程式 </font></td>
  </tr>
</table>
<br>
<strong>範例說明</strong>：<br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<strong> <font color="#FFFF00">crontab 
      -e</font></strong><br>
      <font face="細明體">12　23　*　*　3,6　tar zcvf /backup/bck.tgz /home /etc<br>
      10　22　*　*　 *　 cp -a /var/spool/mail 
      /backup</font><br>
      <font color="#00FFFF"># </font><font color="#00FFFF" size="2">第一行設定是說，於周三及周六晚間十一點十二分執行備份工作 
      ﹔</font><font color="#00FFFF" size="2">如您沒指定</font><br>
      <font color="#00FFFF"># </font> <font color="#00FFFF" size="2"> bck.tgz 
      的路徑，那麼預設就會建立在自己的家目錄中。</font><br>
      <font color="#00FFFF"># </font> <font color="#00FFFF" size="2">下一行的設定是說，每天晚間十點十分備份 
      /var/spool/mail 目錄。</font><br>
      </font> <font color="#FFFFFF"><br>
      suse:/var/spool/cron/tabs # <font color="#FFFF00"><strong>cat root</strong></font><br>
      # DO NOT EDIT THIS FILE - edit the master and reinstall.<br>
      # (/tmp/crontab.5037 installed on Sun Sep 18 17:11:12 2006)<br>
      # (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)<br>
      <font color="#FFFF00" face="細明體">12　23　*　*　3,6　tar zcvf /backup/bck.tgz 
      /home /etc <br>
      10　22　*　*　 *　 cp -a /var/spool/mail /backup</font><strong><br>
      </strong><font color="#00FFFF">#</font> <font color="#00FFFF" size="2">當 
      root 使用 crontab 指令所編輯好的排程會寫入 /var/spool/cron/tabs/root 檔案中。</font><br>
      <br>
      suse:~ #<strong> <font color="#FFFF00">crontab -l</font></strong><br>
      # DO NOT EDIT THIS FILE - edit the master and reinstall.<br>
      # (/tmp/crontab.5037 installed on Sun Sep 18 17:11:12 2006)<br>
      # (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)<br>
      <font color="#FFFF00" face="細明體">12　23　*　*　3,6　tar zcvf /backup/bck.tgz 
      /home /etc<br>
      10　22　*　*　 *　 cp -a /var/spool/mail /backup</font><strong><br>
      </strong><font color="#00FFFF">#</font> <font color="#00FFFF" size="2">列出排程工作內容。您會發現跟上面的內容一模一樣，因這些資料就是從那個檔案來讀出的。</font><strong><br>
      </strong></font> <font color="#FFFFFF"><br>
      suse:~ # <font color="#FFFF00"><strong>crontab -r</strong></font><br>
      <font color="#00FFFF">#</font> <font color="#00FFFF" size="2">清除剛剛您所編輯的所有 
      crontab 排程。<font color="#FFFFFF"><br>
      </font></font><font color="#00FFFF">#</font> <font color="#00FFFF" size="2">如只想移除部分排程工作的話，就執行 
      &quot;crontab -e&quot; 進去將其刪除即可。</font><br>
      </font> <font color="#FFFFFF"> <br>
      suse:~ #<font color="#FFFF00"> <strong>crontab -l</strong><br>
      <font color="#FFFFFF">no crontab for root </font></font><br>
      <font color="#00FFFF">#</font> <font color="#00FFFF" size="2"></font><font color="#00FFFF" size="2">確定已經移除了噢。</font><br>
      </font> <font color="#FFFFFF"> <br>
      suse:~ # <font color="#FFFF00"><strong>crontab -u barry -e</strong></font><strong><br>
      </strong><font color="#00FFFF">#</font> <font color="#00FFFF" size="2">管理者幫使用者 
      barry 編輯排程。</font><strong><br>
      </strong></font> <font color="#FFFFFF"> <br>
      <font color="#FFFFFF"><font color="#00FFFF">#</font> </font><font color="#00FFFF" size="2">以下範例是使用者 
      barry 事先將欲執行的工作設定在檔案內，然後再配合 crontab 使用：</font><font color="#00FFFF"><br>
      </font> barry@suse:~&gt;<font color="#FFFF00"><strong> vi cronfile</strong></font><br>
      30　14　*　*　5　cat mailfile | mail mary tina<strong> </strong><br>
      <br>
      barry@suse:~&gt;<strong> <font color="#FFFF00">crontab cronfile</font></strong><br>
      barry@suse:~&gt;<strong> <font color="#FFFF00">crontab -l</font></strong><br>
      # DO NOT EDIT THIS FILE - edit the master and reinstall.<br>
      # (cronfile installed on Sun Sep 18 19:20:30 2006)<br>
      # (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)<br>
      <font color="#FFFF00">30　14　*　*　5　cat mailfile | mail mary tina </font></font></td>
  </tr>
</table>
<br>
　剛剛最後一個範例，是以一般使用者的身分去編排程，然後再以 &quot;crontab -l&quot; 去存取 /var/spool/cron/tabs/barry 
的內容。或許您會想說那乾脆直接去編輯或瀏覽這個檔案不就行了嗎，但實際上是不可行的，請檢查一下 /var/spool/cron 的權限就知道為什麼了：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">barry@suse:~&gt; <font color="#FFFF00"><strong>ls 
      -ld /var/spool/cron</strong></font><br>
      <font color="#FFFF00" face="細明體">drwx------</font>　4　root　root　96　 Oct 16 
      22:49　<font color="#0099FF">/var/spool/cron</font></font></td>
  </tr>
</table>
<br>
　看到了嗎 ? 其他人 (others) 對這個目錄根本不具任何權限。那既然這樣又為何可以使用指令的方式來寫入及存取呢 ? 再查看一下 crontab 程式的權限：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">barry@suse:~&gt;<font color="#FFFF00"> 
      <strong>ls -l /usr/bin/crontab</strong></font><br>
      <br>
      <font color="#FFFF00" face="細明體">-rwsr-xr-x</font>　1　root　trusted　33260 Jun 16 21:37　<font color="#00FF00">/usr/bin/crontab</font></font></td>
  </tr>
</table>
<br>
　原來 crontab 程式具有 SUID<strong> </strong>的屬性，這下子總該恍然大悟了吧 !<br>
<br>
<strong><a name="5"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
<font size="+1">編輯排程設定檔</font></strong><br>
<br>
　管理者可以直接去編輯排程的設定檔，至於編輯的格式跟我們使用 crontab 指令去編輯時差不多，只不過多了個執行身份的設定而已。以下會分別在 /etc/crontab 
檔案及 /etc/cron.d/ 目錄中去編輯排程。<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td width="2%">&nbsp;</td>
    <td width="3%" align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td width="95%"><strong><font color="#000099"><a name="20"></a>編輯 /etc/crontab</font></strong></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td><table width="100%" border="0">
        <tr> 
          <td bgcolor="#000000"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
            /etc/crontab</strong></font><br>
            SHELL=/bin/sh<font color="#00FFFF" size="2">　<br>
            </font><font color="#00FFFF"># </font><font color="#00FFFF" size="2">指定程式執行時所使用的解析器。</font><br>
            <br>
            PATH=/usr/bin:/usr/sbin:/sbin:/bin:/usr/lib/news/bin<font color="#00FFFF" size="2">　<br>
            </font><font color="#FFFFFF"><font color="#00FFFF"># </font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2">設定執行程式所引用的路徑。<br>
            </font><br>
            MAILTO=root<font color="#00FFFF" size="2">　<br>
            </font><font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
            </font></font></font><font color="#00FFFF" size="2">將排程中，執行程式的 stdout 
            或 stderr 訊息寄給 root。</font><br>
            <font color="#0099FF"><br>
            # check scripts in cron.hourly, cron.daily, cron.weekly, and cron.monthly</font><br>
            <font face="細明體">-*/15　*　*　*　* 　</font><font color="#FFFF00" face="細明體">root</font><font face="細明體"> 
            　 test -x /usr/lib/cron/run-crons &amp;&amp; /usr/lib/cron/run-crons<strong> 
            </strong>&gt;/dev/null 2&gt;&amp;1</font><br>
            <font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
            </font></font></font><font color="#00FFFF" size="2">run-crons 這支 script，主要是檢查 
            /etc 下的 cron.hourly、cron.daily、</font><br>
            <font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
            </font><font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF" size="2">cron.weekly</font></font> 
            <font color="#00FFFF" size="2">及</font></font><font color="#00FFFF"> 
            </font></font></font><font color="#00FFFF" size="2">cron.monthly 目錄裡的 
            scripts 需不需要被執行，</font><br>
            <font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
            </font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2"></font> 
            <font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF" size="2">且每 
            15 分鐘 run-crons 就會檢查</font></font><font color="#00FFFF" size="2">一次。</font></font><font color="#00FFFF" size="2">另外 
            UID 為 0 者，可以在排程紀錄</font><br>
            <font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF">#</font></font></font><font color="#00FFFF" size="2"> 
            </font><font color="#FFFFFF"><font color="#00FFFF" size="2">的最前頭加上 
            &quot;-&quot; 符號，</font><font color="#FFFFFF"><font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"> 
            </font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2"></font> 
            <font color="#00FFFF" size="2"></font><font color="#00FFFF" size="2">表示不會</font><font color="#FFFFFF"><font color="#00FFFF" size="2">把該程式</font></font></font><font color="#00FFFF" size="2">的</font></font><font color="#00FFFF" size="2">執行訊息紀錄下來。</font></font><font color="#FFFFFF"><br>
            </font><font color="#FFFFFF"><br>
            <font color="#FFFF00">30　2　*　*　*　 root　/bin/tar zcvf /backup/bck.`date 
            +\%m-\%d`.tgz </font> <font color="#FFFF00">/home /etc </font></font> 
            <font color="#FFFFFF"><font color="#00FFFF"><br>
            </font><font color="#FFFFFF"><font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
            </font></font></font> <font color="#00FFFF"><font size="2">這是筆者所新增的一筆排程工作。</font></font></font></font></td>
        </tr>
      </table>
      <br>
      在剛剛 /etc/crontab 裡新增了一個備份的排程工作，並在備份檔的檔名中加上了日期的顯示，如此一來，就可以讓每天所產生的備份檔名稱都不相同。如果您也想這麼做的話，那 
      date<strong> </strong>這個指令的基本用法可就要學一下了：<br> <br> <table width="100%" border="0">
        <tr> 
          <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> 
            <strong>date</strong></font><strong> 　</strong>　　　　　<br>
            Sat Jan 20 16:30:18 CST 2007<br>
            <font color="#00FFFF"># </font><font color="#00FFFF" size="2">顯示目前的日期時間。</font><br>
            <br>
            suse:~ # <strong><font color="#FFFF00">date 012115202007</font></strong><br>
            Sun Jan 21 15:20:00 CST 2007<br>
            <font color="#00FFFF"># <font size="2">修改系統 (作業系統) 時間。<br>
            </font><font color="#FFFFFF"><font color="#00FFFF"># </font></font><font size="2">date 
            指令後所指定者為月(01)、日(21)<font size="2">、時 (15)、分 (20)、年 (2007)。</font> 
            </font></font><br>
            <br>
            suse:~ #<font color="#FFFF00"><strong> date +%Y-%m-%d--%k:%M</strong></font><br>
            2007-01-21--15:26<br>
            <font color="#00FFFF"># </font><font color="#00FFFF" size="2">%Y 一直到最後面的 
            %M，依序分別代表西元年、月、日、時、分。</font></font></td>
        </tr>
      </table>
      <br>
      一般在命令列上執行 date 指令並於其後指定要顯示的時間單位時，不需在 &quot;%&quot; 前加上 backslash ( \ )，但是如果設定在排程之中，就一定要加上 
      &quot; \ &quot; ，否則此排程工作會無法執行。不然您乾脆將要執行的指令事先寫在 scripts 裡，然後再把此 script 放入 
      /etc/crontab 也行：<br> <br> <table width="100%" border="0">
        <tr> 
          <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
            vi bck.sh</strong><br>
            <font color="#0099FF">#! /bin/bash</font></font><br>
            /bin/tar zcvf /backup/bck.`date +%m-%d`.tgz /home /etc <font color="#00FFFF" size="2">　</font><br>
            <font color="#00FFFF"># </font><font color="#00FFFF" size="2"></font><font color="#00FFFF" size="2">&quot;%&quot; 
            之前，不需加上 &quot;\&quot;。</font><br>
            <br>
            suse:~ #<strong> <font color="#FFFF00">chmod +x bck.sh</font><br>
            </strong><br>
            suse:~ #<strong> <font color="#FFFF00">vi /etc/crontab</font></strong><br>
            30　2　*　*　*　 root　 /root/bck.sh </font></td>
        </tr>
      </table>
      <br>
      這樣就可以搞定了。 </td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><strong><font color="#000099"><a name="21"></a>編輯 /etc/cron.d/*</font></strong></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>這是另一個可以編寫排程的地方，您可於此目錄下建立排程檔案，至於檔案內容的設定格式與 /etc/crontab 是相同的：<br> <br> 
      <table width="100%" border="0">
        <tr> 
          <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"> 
            <strong>vi /etc/cron.d/cronfile</strong></font><br>
            30　23　*　*　*　root　/bin/tar zcvf /root/test.`date +\%m-\%d`.tgz /home 
            /var /etc</font></td>
        </tr>
      </table></td>
  </tr>
</table>
<br>
<strong><a name="6"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
<font size="+1">限定使用者執行 crontab</font></strong><br>
<br>
　系統預設所有使用者都能執行 crontab 指令，來設定自己的排程工作，因此如果對這方面想要稍做限制的話，可以利用 /etc/cron.deny 及 /etc/cron.allow 
這兩個檔案。 <br>
<br>
<table width="100%" border="0">
  <tr> 
    <td width="2%">&nbsp;</td>
    <td width="3%" align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td width="95%"><strong><font color="#000099"><a name="22"></a>/etc/cron.deny</font></strong>：</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>欲拒絕部分使用者執行 crontab 指令，則可將這些使用者名單寫入此檔中。比如想拒絕使用者 barry 及 tina 執行 crontab，就把這兩個使用者設定進去： 
      <br> <br> <table width="98%" border="0">
        <tr> 
          <td bgcolor="#000000"> <p><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
              /etc/cron.deny</strong></font><br>
              barry<br>
              tina <br>
              </font></p></td>
        </tr>
      </table>
      <br>
      這樣除了 barry 及 tina 不能執行 crontab 外，其他人則是會被允許的。 </td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><strong><font color="#000099"><a name="23"></a>/etc/cron.allow</font></strong><font color="#000099">：</font></td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>只想允許少數使用者執行 crontab 指令，則可設定在 /etc/cron.allow 中。<br> <br> <table width="98%" border="0">
        <tr> 
          <td bgcolor="#000000"><font color="#FFFFFF">suse:~ # <font color="#FFFF00"><strong>vi 
            /etc/cron.allow</strong></font><br>
            barry <br>
            mary</font></td>
        </tr>
      </table>
      <br>
      這樣除了 barry 及 mary 可以執行 crontab 外，其他人 (root 除外) 則是會被拒絕的。</td>
  </tr>
</table>
<br>
　當 /etc/cron.allow 檔案存在時，是會以這個檔案的設定為主，只有在 cron.allow 不存在時，才會以 cron.deny 為主。比如上面兩個範例中，cron.allow 
及 cron.deny 檔案裡都有 barry，那最後 barry 當然是會被允許的。由以上的解說不難發現，當 cron.allow 及 cron.deny 
都同時存在時，實際上在 cron.deny 中的設定是沒什麼效果的。<br>
<br>
　　 　<br>
<font color="#0000FF" size="+2"><strong><a name="7"></a><font size="6">8.2 at 
排程</font></strong></font><br>
<br>
<font size="+1"><strong><a name="8"></a><font size="5">8.2.1 at 所需套件及套件內容</font></strong></font><br>
　<br>
　先確定 at 套件有安裝，並檢視一下套件內容：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
      rpm -q at</strong></font><br>
      at-3.1.8-921.2<br>
      <br>
      suse:~ #<font color="#FFFF00"> <strong>rpm -ql at</strong></font><br>
      </font> <table width="100%" border="0">
        <tr> 
          <td width="15%" align="left" valign="top" nowrap><font color="#FFFFFF">/etc/at.deny</font></td>
          <td width="85%"><font color="#00FFFF" size="2">可以將拒絕執行 at 程式的使用者名單設定在這裡。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/etc/init.d/atd</font></td>
          <td><font color="#00FFFF" size="2">管理 at 排程服務的 script。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/bin/at</font></td>
          <td><font color="#00FFFF" size="2">編輯 at 排程的指令。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/bin/atq</font></td>
          <td><font color="#00FFFF" size="2">查詢 at 排程。如果是以 root 身分執行 atq 的話，會列出所有 
            user 的 at 排程。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/bin/atrm</font></td>
          <td><font color="#00FFFF" size="2">移除 at 排程。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/bin/batch</font></td>
          <td><font color="#00FFFF" size="2">另一個編輯 at 排程的指令，不過其所編輯的排程，只有在系統平均負載較低時才會執行。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/sbin/atd</font></td>
          <td><font color="#00FFFF" size="2">提供 at 排程服務的程式 (daemon)。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/usr/sbin/rcatd 
            </font></td>
          <td><font color="#00FFFF" size="2">連結至 /etc/init.d/atd 的符號連結檔。</font></td>
        </tr>
        <tr> 
          <td align="left" valign="top" nowrap><font color="#FFFFFF">/var/spool/atjobs</font></td>
          <td><font color="#00FFFF" size="2">使用 at 指令所編輯好的排程，會寫入此目錄下的檔案之中。</font></td>
        </tr>
      </table></td>
  </tr>
</table>
<br>
　/usr/sbin/atd 是 at 排程執行的主程式，不過 SuSE 預設開機時是不啟動這個服務的，所以先把它啟動再說吧：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td height="42" bgcolor="#000000"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
      rcatd start</strong></font><br>
      Starting service at daemon　　　　　　　　　<font color="#00FF00"> done</font></font></td>
  </tr>
</table>
<br>
　如想於下次開機時啟動 at 服務，那就設定一下囉：<br>
<br>
<table width="100%" border="0" bgcolor="#000000">
  <tr>
    <td height="27"><font color="#FFFFFF">suse:~ #<font color="#FFFF00"><strong> 
      chkconfig atd 35 </strong></font></font></td>
  </tr>
</table>
<br>
<br>
<font size="+1"><strong><a name="9"></a><font size="5">8.2.2 設定 at 排程</font></strong></font><br>
<br>
　這裡主要是教大家使用 at 指令來編輯 at 排程，當然與 at 相關的檔案也要有所認識。at 學會了後，那另一個指令 batch 就更簡單了。<br>
<br>
<strong><a name="10"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
<font size="+1">使用 at 指令建立 at 排程</font></strong><font size="+1"><strong><br>
<br>
</strong></font>　利用 at 指令所編輯的排程，只會在指定的時間執行那麼一次而已。<font size="+1"><strong><br>
<br>
</strong></font><strong>指令語法</strong><font size="+1">：<br>
</font>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><strong><font face="細明體">at [-f file] TIME<br>
      at [-ldc] [jobs-number...]</font></strong></td>
  </tr>
</table>
<font size="+1"><strong><br>
</strong></font>　設定 at 排程很簡單，只要在指令後方輸入執行排程的時間，並按下 Enter 鍵後，就可以在 at 提示號下輸入您欲執行的程式。另外一種方式是先將 
at 排程工作設定在檔案內，然後執行 &quot;<font color="#0000FF">at -f file time</font>&quot; 即可。<strong><br>
<br>
參數說明</strong>：<br>
<table width="100%" border="1">
  <tr> 
    <td width="8%" align="center" valign="middle" nowrap><font color="#000099">-l</font></td>
    <td width="92%"><font color="#000099">列出 at 排程。&quot;at -l&quot; 同等於單一指令 &quot;atq&quot;。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">-d</font></td>
    <td nowrap><font color="#000099">刪除 at 排程。其後需指定 at job number。&quot;at -d&quot; 
      同等於 &quot;atrm&quot;。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">-c</font></td>
    <td><font color="#000099">列出 at 排程工作的內容。其後需指定 at job number。</font></td>
  </tr>
  <tr> 
    <td align="center" valign="middle" nowrap><font color="#000099">-f</font></td>
    <td><font color="#000099">參數後需指定一檔案，此檔案內容就是 at 排程所要執行的工作。</font></td>
  </tr>
</table>
<br>
　以下舉幾個 at 的時間格式給大家做參考：<br>
<br>
<table width="100%" border="0" bgcolor="#CCCCCC">
  <tr>
    <td><p><strong>範例一</strong>：於下午四點半執行 at 排程工作。<br>
        barry@suse:~&gt; <font color="#0000FF">at 4:30pm<br>
        <font color="#000000">barry@suse:~&gt; <font color="#0000FF">at 16:30</font><br>
        barry@suse:~&gt; <font color="#0000FF">at 1630</font></font></font></p>
      <p><strong>範例二</strong>：從現在算起三分鐘後執行 at 排程。<br>
        barry@suse:~&gt; <font color="#0000FF">at now +3minutes<br>
        <font color="#000000"># </font><font color="#000000" size="2">也可以使用 weeks、days、hours、months<strong> 
        </strong>做時間單位。</font></font></p>
      <p><strong>範例三</strong>：於 2007 年十月二十日的 18:20 執行 at 排程。<br>
        barry@suse:~&gt; <font color="#0000FF">at 18:20 10/20/2007<br>
        <font color="#000000">#<font size="2"> </font></font><font color="#000000" size="2">日期的格式也可以為 
        2007-10-20 或 20.10.2007。 </font></font></p>
      <p><strong>範例四</strong>：從現在算起五天後的 16:00 執行排程。<br>
        barry@suse:~&gt; <font color="#0000FF">at 4pm +5days </font></p>
      <p><strong>範例五</strong>：明天下午三點十五分執行排程。<br>
        barry@suse:~&gt; <font color="#0000FF">at 15:15 tomorrow</font></p>
      <p><strong>範例六</strong>：兩週後的下午茶時間 (下午四點) 執行排程。<br>
        barry@suse:~&gt;<font color="#0000FF"> at teatime +2weeks</font></p></td>
  </tr>
</table>
<br>
<strong>範例說明</strong>： <br>
<table width="100%" border="0">
  <tr> 
    <td bgcolor="#000000"><font color="#FFFFFF">barry@suse:~&gt;<font color="#FFFF00"> 
      <strong>at 1920</strong></font><br>
      warning: commands will be executed using /bin/sh<br>
      <font face="細明體">at&gt; <font color="#FFFF00"><strong>cp -a ~/* /tmp/bckdir</strong></font> 
      <font color="#00FFFF" size="2">← 編輯第一個 at 排程工作。</font><br>
      at&gt; <font color="#FFFF00"><strong>mail mary &lt; ~/mailfile</strong></font> 
      <font color="#FFFFFF"><font color="#00FFFF" size="2">← 編輯第二個 at 排程工作。</font></font> 
      <br>
      at&gt; &lt;EOT&gt; </font></font><font color="#00FFFF">← <font size="2">按下 
      Ctrl-D 來結束 at 排程的編寫，此時就會看到 &lt;EOT&gt; 這個字眼出現。</font></font><font color="#FFFFFF"><br>
      job　1　at　2007-02-25　19:20<br>
      <font color="#00FFFF"># </font></font><font color="#00FFFF"><font size="2">顯示在這個時間會有一個 
      at job number 為 1 的 at 排程要執行。</font></font><font color="#FFFFFF"><br>
      </font> <font color="#FFFFFF"><br>
      <font color="#00FFFF"># </font><font color="#00FFFF" size="2">現在再編輯另一個 at 
      排程：</font><br>
      barry@suse:~&gt;<font color="#FFFF00"><strong> at 1200 2007-09-22</strong></font><br>
      warning: commands will be executed using /bin/sh<br>
      at&gt;<strong> <font color="#FFFF00">mail tina tom &lt; ~/testfile</font></strong><br>
      at&gt; &lt;EOT&gt;<br>
      job　2　at　2007-09-22　12:00<br>
      <br>
      <font color="#00FFFF"># </font><font color="#00FFFF" size="2">接著可使用 at -l 
      或 atq 來列出 barry 自己的 at 排程執行時間：</font><br>
      barry@suse:~&gt;<font color="#FFFF00"> <strong>at -l　</strong></font><br>
      1　2007-02-25　19:20　a　barry <br>
      2　2007-09-22　12:00　a　barry <br>
      <br>
      barry@suse:~&gt;<font color="#FFFF00"><strong> atq</strong></font><br>
      1　2007-02-25　19:20　a　barry <br>
      2　2007-09-22　12:00　a　barry<br>
      <br>
      <font color="#FFFFFF"><font color="#00FFFF"># </font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2">如果想要瀏覽 
      job number 為 1 及 2 的 at 排程工作內容，請執行：</font><br>
      barry@suse:~&gt;<font color="#FFFF00"><strong> at -c 1 2</strong></font><br>
      <br>
      <font color="#FFFFFF"><font color="#00FFFF"># </font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2">將排程工作事先寫在一個檔案裡，再配合 
      -f 參數使用：</font><br>
      tina@suse:~&gt;<font color="#FFFF00"><strong> vi /tmp/atfile</strong></font><br>
      <font face="細明體">mkdir /tmp/tinadir<br>
      cp -a ~/* /tmp/tinadir</font> <br>
      <br>
      tina@suse:~&gt;<font color="#FFFF00"> <strong>at -f /tmp/atfile 2330</strong></font><br>
      warning: commands will be executed using /bin/sh<br>
      job　3　at　2007-02-25　23:30 <br>
      <br>
      <font color="#FFFFFF"><font color="#00FFFF"># </font><font color="#00FFFF" size="2"></font></font><font color="#00FFFF" size="2">現在請以 
      root 的身分執行 atq：</font><br>
      suse:~ #<font color="#FFFF00"> <strong>atq</strong></font><br>
      1　2007-02-25　19:20　a　barry <br>
      2　2007-09-22　12:00　a　barry<br>
      3　2007-02-25　23:30　a　tina<br>
      <font color="#FFFFFF"><font color="#00FFFF"># </font></font><font color="#00FFFF" size="2">看到沒，管理者執行 
      atq 是可以看到所有使用者的 at 排程執行時間噢。<br>
      <br>
      </font><font color="#FFFFFF"><font color="#FFFFFF"><font color="#00FFFF"># 
      </font></font><font color="#00FFFF" size="2">最後練習使用 at -d 或 atrm 來刪除 job 
      number 為 1 的 at 排程：</font><br>
      barry@suse:~&gt;<font color="#FFFF00"> <strong>at -d 1</strong></font><br>
      barry@suse:~&gt;<font color="#FFFF00"> <strong>atrm 1</strong></font><br>
      <font color="#00FFFF"># </font><font color="#00FFFF" size="2"></font><font color="#00FFFF" size="2">以上兩種執行方式，與 
      &quot;at -r 1&quot; 是相同的。</font></font><font color="#00FFFF" size="2"> </font></font></td>
  </tr>
</table>
<br>
<font size="+1"></font> <strong><font size="+1"><a name="11"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
at 相關檔案</font><br>
<br>
</strong>
<table width="100%" border="0">
  <tr> 
    <td width="2%">&nbsp;</td>
    <td width="3%" align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td width="95%"><strong><font color="#000099">/var/spool/atjobs/*</font></strong>：</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>使用者所編輯好的 at 排程，會寫入 /var/spool/atjobs 目錄下的檔案裡。而當執行 &quot;at -c job-number&quot; 
      時，就是存取這些檔案的內容。</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td>&nbsp;</td>
    <td align="center"><img src="icon.jpg" tppabs="http://www.suse.url.tw/picture/icon.jpg" width="11" height="11"></td>
    <td><strong><font color="#000099">/etc/at.deny、/etc/at.allow</font></strong><font color="#000099">：</font></td>
  </tr>
  <tr> 
    <td height="242">&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td>如果要限定一般使用者執行 at 去編輯排程，就必須使用這兩個檔案去做控管。<br>
      當 /etc/at.allow 檔案存在時，是會以這個檔案的設定為主，只有在 at.allow 不存在時，才會以 at.deny 為主。也就是說想拒絕少數使用者執行 
      at，可將這些使用者名單寫入 at.deny，但若只想允許少數使用者執行 at ，則把這些使用者名單設定在 at.allow 就行了。當兩個檔案同時存在時，會以 
      at.allow 的設定為主。 
      <p>另外若只想讓 root 使用 at 來編排程，其他人全部都不能用，那麼在預設情形下我們有兩種方式可以達成這個目的：</p>
      <ol>
        <li><font color="#0000FF">移除 at.deny 檔案：</font><br>
          <table width="30%" border="0" bgcolor="#CCCCCC">
            <tr> 
              <td nowrap>suse:~ # <strong>rm -f /etc/at.deny</strong></td>
            </tr>
          </table>
          <br>
        </li>
        <li><font color="#0000FF">建立 at.allow 的空檔案：</font><br>
          <table width="30%" border="0" bgcolor="#CCCCCC">
            <tr> 
              <td nowrap>suse:~ # <strong>touch /etc/at.allow</strong></td>
            </tr>
          </table>
        </li>
      </ol></td>
  </tr>
</table>
<strong><br>
</strong> <strong><a name="12"></a><img src="1775.gif" tppabs="http://www.suse.url.tw/picture/1775.gif" width="18" height="18"> 
<font size="+1">使用 batch 指令建立 at 排程</font></strong><br>
<br>
<font color="#FF0000"><font color="#000000">　還有個可以執行 at 排程的指令叫 <font color="#0000FF">batch</font>，</font></font>利用 
batch 所建立的 at 排程，只有在系統平均負載較低時才會執行：<br>
<br>
<table width="100%" border="0">
  <tr> 
    <td nowrap bgcolor="#000000"><font color="#FFFFFF">suse:~ #<strong> <font color="#FFFF00">batch</font></strong><br>
      warning: commands will be executed using /bin/sh<br>
      at&gt;<font color="#FFFF00"><strong> tar zcvf /backup/bck.taz /var /etc 
      /home /srv</strong></font><br>
      at&gt; &lt;EOT&gt;<br>
      job　5　at　2007-02-28　14:03</font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font color="#000000"><em>copyright &copy; 2006 by barry ( 柏青哥 
  )<br>
  </em></font></p>
</body>
</html>
